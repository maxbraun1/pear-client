{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\MERN-Project\\\\client\\\\src\\\\components\\\\profile\\\\publicProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Post from \"../posts/post/post\";\nimport classes from \"./profile.module.css\";\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\nimport PostIcon from \"../../assets/icons/postIcon.svg\";\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PublicProfile(props) {\n  _s();\n\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [bio, setBio] = useState(null);\n  const [accountDate, setAccountDate] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [postCount, setPostCount] = useState(0);\n  const [likedCount, setLikedCount] = useState(0);\n  useEffect(() => {\n    if (props.userID != null) {\n      axios.post('http://localhost:3001/users/public', {\n        userID: props.userID\n      }).then(function (response) {\n        if (response.data === false) {\n          console.log(\"error\");\n        } else {\n          const user = response.data;\n          setFirstName(user.firstName);\n          setLastName(user.lastName);\n          setBio(user.bio);\n          setPosts(user.posts);\n          setAccountDate(user.accountDate);\n          setProfilePicture(user.profilePicture);\n          setPostCount(user.postCount);\n          setLikedCount(user.likedCount);\n        }\n      });\n    }\n  }, [props.userID]);\n\n  function getMemberDate(timestamp) {\n    const options = {\n      year: \"numeric\",\n      month: \"long\"\n    };\n    const date = new Date(timestamp).toLocaleDateString(undefined, options);\n    return date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profileWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profileCoverPhoto,\n        style: {\n          backgroundImage: `url(${DefaultCover})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profileFlex,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profileLeftBar,\n          children: [firstName && profilePicture === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.profileChar,\n            children: firstName.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 62\n          }, this) : null, profilePicture !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profilePicture,\n            style: {\n              backgroundImage: `url(${profilePicture})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profileName,\n            children: firstName + \" \" + lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profileBio,\n            children: bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.pofileInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.profileInfoStat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: PostIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.profileStatTitle,\n                children: \"Posts: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 87\n              }, this), postCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.profileInfoStat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: HeartIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.profileStatTitle,\n                children: \"Liked Posts: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 88\n              }, this), likedCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.profileInfoStat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: CalendarIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.profileStatTitle,\n                children: \"Joined: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 91\n              }, this), getMemberDate(accountDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profileRight,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.postsWrapper,\n            children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n              postID: post\n            }, post, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 67\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PublicProfile, \"+4+SmDwfbYZk2gaTJTaeOxMpmos=\");\n\n_c = PublicProfile;\nexport default PublicProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicProfile\");","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/profile/publicProfile.js"],"names":["useState","useEffect","axios","Post","classes","DefaultCover","HeartIcon","PostIcon","CalendarIcon","PublicProfile","props","firstName","setFirstName","lastName","setLastName","bio","setBio","accountDate","setAccountDate","profilePicture","setProfilePicture","posts","setPosts","postCount","setPostCount","likedCount","setLikedCount","userID","post","then","response","data","console","log","user","getMemberDate","timestamp","options","year","month","date","Date","toLocaleDateString","undefined","profileWrapper","profileCoverPhoto","backgroundImage","profileFlex","profileLeftBar","profileChar","charAt","toUpperCase","profileName","profileBio","pofileInfo","profileInfoStat","profileStatTitle","profileRight","postsWrapper","length","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"../posts/post/post\";\r\nimport classes from \"./profile.module.css\";\r\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\r\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\r\nimport PostIcon from \"../../assets/icons/postIcon.svg\";\r\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\r\n\r\nfunction PublicProfile(props) {\r\n    const [firstName,setFirstName] = useState(null);\r\n    const [lastName,setLastName] = useState(null);\r\n    const [bio,setBio] = useState(null);\r\n    const [accountDate,setAccountDate] = useState(null);\r\n    const [profilePicture,setProfilePicture] = useState(null);\r\n    const [posts,setPosts] = useState([]);\r\n    const [postCount,setPostCount] = useState(0);\r\n    const [likedCount,setLikedCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(props.userID != null){\r\n            axios.post('http://localhost:3001/users/public',{ userID: props.userID }).then(function (response) {\r\n                if(response.data === false){\r\n                    console.log(\"error\");\r\n                }else{\r\n                    const user = response.data;\r\n                    setFirstName(user.firstName);\r\n                    setLastName(user.lastName);\r\n                    setBio(user.bio);\r\n                    setPosts(user.posts);\r\n                    setAccountDate(user.accountDate);\r\n                    setProfilePicture(user.profilePicture);\r\n                    setPostCount(user.postCount);\r\n                    setLikedCount(user.likedCount);\r\n                }\r\n            });\r\n        }\r\n    },[props.userID])\r\n\r\n    function getMemberDate(timestamp){\r\n        const options = { year: \"numeric\", month: \"long\"}\r\n        const date = new Date(timestamp).toLocaleDateString(undefined, options);\r\n        return date;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className={classes.profileWrapper}>\r\n            <div className={classes.profileCoverPhoto} style={{backgroundImage: `url(${DefaultCover})`}}></div>\r\n            <div className={classes.profileFlex}>\r\n                <div className={classes.profileLeftBar}>\r\n                    { firstName && profilePicture === null ? <p className={classes.profileChar}>{firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { profilePicture !== null ? <div className={classes.profilePicture} style={{backgroundImage: `url(${profilePicture})`}}></div> : null }\r\n                    <div className={classes.profileName}>{firstName + \" \" + lastName}</div>\r\n                    <div className={classes.profileBio}>{bio}</div>\r\n                    <div className={classes.pofileInfo}>\r\n                        <div className={classes.profileInfoStat}><img src={PostIcon}/><span className={classes.profileStatTitle}>Posts: </span>{postCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={HeartIcon}/><span className={classes.profileStatTitle}>Liked Posts: </span>{likedCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={CalendarIcon}/><span className={classes.profileStatTitle}>Joined: </span>{getMemberDate(accountDate)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.profileRight}>\r\n                    <div className={classes.postsWrapper}>\r\n                        { posts.length > 0 ? posts.map((post) => (<Post key={post} postID={post} />)) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicProfile;"]},"metadata":{},"sourceType":"module"}