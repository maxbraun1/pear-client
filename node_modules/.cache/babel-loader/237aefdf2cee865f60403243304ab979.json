{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\MERN-Project\\\\client\\\\src\\\\components\\\\posts\\\\post\\\\postInteractions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport classes from \"./postInteractions.module.css\";\nimport heartIcon from \"../../../assets/icons/heartIcon.svg\";\nimport heartIconLiked from \"../../../assets/icons/heartIcon-liked.svg\";\nimport requestIcon from \"../../../assets/icons/requestIcon.svg\";\nimport commentIcon from \"../../../assets/icons/commentIcon.svg\";\nimport { LoggedContext } from \"../../../App\";\nimport { PostContext } from \"./post.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostInteractions(props) {\n  _s();\n\n  const [postLiked, setPostLiked] = useState(false);\n  const {\n    postUpToDate,\n    setPostUpToDate\n  } = useContext(PostContext);\n  const {\n    loggedStatus,\n    setLoggedStatus\n  } = useContext(LoggedContext);\n  useEffect(() => {\n    setPostLiked(props.postLikes.includes(loggedStatus));\n  }, [props.postLikes, loggedStatus]);\n\n  function likePost() {\n    // If User is Logged in\n    if (loggedStatus != false) {\n      Axios.post(\"http://localhost:3001/posts/like\", {\n        userID: loggedStatus,\n        postID: props.postID\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data === true) {\n          setPostUpToDate(!postUpToDate);\n        } else {\n          console.log(response.data);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.postInteractions,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postInteractionButton,\n      onClick: likePost,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: postLiked ? heartIconLiked : heartIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 78\n      }, this), props.postLikesCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postInteractionButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: requestIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postInteractionButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: commentIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostInteractions, \"rhlSr/gfK93UCmLJGGcpTaBwfE8=\");\n\n_c = PostInteractions;\nexport default PostInteractions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostInteractions\");","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/posts/post/postInteractions.js"],"names":["useState","useEffect","useContext","Axios","classes","heartIcon","heartIconLiked","requestIcon","commentIcon","LoggedContext","PostContext","PostInteractions","props","postLiked","setPostLiked","postUpToDate","setPostUpToDate","loggedStatus","setLoggedStatus","postLikes","includes","likePost","post","userID","postID","withCredentials","then","response","data","console","log","postInteractions","postInteractionButton","postLikesCount"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAACe,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAkCd,UAAU,CAACQ,WAAD,CAAlD;AACA,QAAM;AAACO,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAkChB,UAAU,CAACO,aAAD,CAAlD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,YAAY,CAACF,KAAK,CAACO,SAAN,CAAgBC,QAAhB,CAAyBH,YAAzB,CAAD,CAAZ;AACH,GAFQ,EAEP,CAACL,KAAK,CAACO,SAAP,EAAkBF,YAAlB,CAFO,CAAT;;AAIA,WAASI,QAAT,GAAmB;AACf;AACA,QAAGJ,YAAY,IAAI,KAAnB,EAAyB;AACrBd,MAAAA,KAAK,CAACmB,IAAN,CAAW,kCAAX,EAA8C;AAAEC,QAAAA,MAAM,EAAEN,YAAV;AAAwBO,QAAAA,MAAM,EAAEZ,KAAK,CAACY;AAAtC,OAA9C,EAA6F;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAA7F,EAAsHC,IAAtH,CAA4HC,QAAD,IAAc;AACrI,YAAGA,QAAQ,CAACC,IAAT,KAAkB,IAArB,EAA0B;AACtBZ,UAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,SAFD,MAEK;AACDc,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH;AACJ,OAND;AAOH;AAEJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAExB,OAAO,CAAC2B,gBAAxB;AAAA,4BACG;AAAK,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,qBAAxB;AAA+C,MAAA,OAAO,EAAEX,QAAxD;AAAA,8BAAkE;AAAK,QAAA,GAAG,EAAER,SAAS,GAAGP,cAAH,GAAoBD;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAlE,EAAsHO,KAAK,CAACqB,cAA5H;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC4B,qBAAxB;AAAA,6BAA+C;AAAK,QAAA,GAAG,EAAEzB;AAAV;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAK,MAAA,SAAS,EAAEH,OAAO,CAAC4B,qBAAxB;AAAA,6BAA+C;AAAK,QAAA,GAAG,EAAExB;AAAV;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BQG,gB;;KAAAA,gB;AAiCT,eAAeA,gBAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport classes from \"./postInteractions.module.css\";\r\nimport heartIcon from \"../../../assets/icons/heartIcon.svg\";\r\nimport heartIconLiked from \"../../../assets/icons/heartIcon-liked.svg\";\r\nimport requestIcon from \"../../../assets/icons/requestIcon.svg\";\r\nimport commentIcon from \"../../../assets/icons/commentIcon.svg\";\r\nimport { LoggedContext } from \"../../../App\";\r\nimport { PostContext } from \"./post.js\";\r\n\r\nfunction PostInteractions(props) {\r\n\r\n    const [postLiked, setPostLiked] = useState(false);\r\n    const {postUpToDate, setPostUpToDate} = useContext(PostContext);\r\n    const {loggedStatus, setLoggedStatus} = useContext(LoggedContext);\r\n\r\n    useEffect(() => {\r\n        setPostLiked(props.postLikes.includes(loggedStatus));\r\n    },[props.postLikes, loggedStatus]);\r\n\r\n    function likePost(){\r\n        // If User is Logged in\r\n        if(loggedStatus != false){\r\n            Axios.post(\"http://localhost:3001/posts/like\",{ userID: loggedStatus, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setPostUpToDate(!postUpToDate);\r\n                }else{\r\n                    console.log(response.data);\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.postInteractions}>\r\n           <div className={classes.postInteractionButton} onClick={likePost}><img src={postLiked ? heartIconLiked : heartIcon}/>{props.postLikesCount}</div>\r\n           <div className={classes.postInteractionButton}><img src={requestIcon}/></div>\r\n           <div className={classes.postInteractionButton}><img src={commentIcon}/></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostInteractions;"]},"metadata":{},"sourceType":"module"}