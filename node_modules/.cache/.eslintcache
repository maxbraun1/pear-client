[{"C:\\Dev\\MERN-Project\\client\\src\\index.js":"1","C:\\Dev\\MERN-Project\\client\\src\\App.js":"2","C:\\Dev\\MERN-Project\\client\\src\\pages\\Home.js":"3","C:\\Dev\\MERN-Project\\client\\src\\pages\\Login.js":"4","C:\\Dev\\MERN-Project\\client\\src\\pages\\Profile.js":"5","C:\\Dev\\MERN-Project\\client\\src\\pages\\Submit.js":"6","C:\\Dev\\MERN-Project\\client\\src\\pages\\Feed.js":"7","C:\\Dev\\MERN-Project\\client\\src\\pages\\Register.js":"8","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\PrivateRoute.js":"9","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\Logout.js":"10","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\googleLoginButton.js":"11","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\page-container.js":"12","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBar.js":"13","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebar.js":"14","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\main-content.js":"15","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\userProfile.js":"16","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\postList.js":"17","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebarLink.js":"18","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\auth-layout\\authLayout.js":"19","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBarUser.js":"20","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\post.js":"21","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postTech.js":"22","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postMain.js":"23","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\categoryBar.js":"24","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postHeader.js":"25","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postInteractions.js":"26","C:\\Dev\\MERN-Project\\client\\src\\pages\\User.js":"27","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\settings.js":"28","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\publicProfile.js":"29","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\noResults.js":"30","C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\requests.js":"31","C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\request.js":"32","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\profilePicture.js":"33","C:\\Dev\\MERN-Project\\client\\src\\pages\\About.js":"34","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\footer.js":"35"},{"size":252,"mtime":1644947532396,"results":"36","hashOfConfig":"37"},{"size":1754,"mtime":1646504192788,"results":"38","hashOfConfig":"37"},{"size":4212,"mtime":1646509748122,"results":"39","hashOfConfig":"37"},{"size":1852,"mtime":1644947532397,"results":"40","hashOfConfig":"37"},{"size":1561,"mtime":1645714083168,"results":"41","hashOfConfig":"37"},{"size":5120,"mtime":1646319082746,"results":"42","hashOfConfig":"37"},{"size":2428,"mtime":1646321173155,"results":"43","hashOfConfig":"37"},{"size":2655,"mtime":1644947532398,"results":"44","hashOfConfig":"37"},{"size":190,"mtime":1644947532389,"results":"45","hashOfConfig":"37"},{"size":732,"mtime":1644947532389,"results":"46","hashOfConfig":"37"},{"size":406,"mtime":1644947532389,"results":"47","hashOfConfig":"37"},{"size":194,"mtime":1644947532392,"results":"48","hashOfConfig":"37"},{"size":977,"mtime":1645552500894,"results":"49","hashOfConfig":"37"},{"size":197,"mtime":1644947532391,"results":"50","hashOfConfig":"37"},{"size":187,"mtime":1644947532390,"results":"51","hashOfConfig":"37"},{"size":3775,"mtime":1646320574558,"results":"52","hashOfConfig":"37"},{"size":2368,"mtime":1645715104141,"results":"53","hashOfConfig":"37"},{"size":383,"mtime":1644947532391,"results":"54","hashOfConfig":"37"},{"size":655,"mtime":1645552500892,"results":"55","hashOfConfig":"37"},{"size":1802,"mtime":1646320609620,"results":"56","hashOfConfig":"37"},{"size":1444,"mtime":1646319774901,"results":"57","hashOfConfig":"37"},{"size":403,"mtime":1646505893234,"results":"58","hashOfConfig":"37"},{"size":507,"mtime":1646324484458,"results":"59","hashOfConfig":"37"},{"size":737,"mtime":1645228747293,"results":"60","hashOfConfig":"37"},{"size":2831,"mtime":1646319082738,"results":"61","hashOfConfig":"37"},{"size":4216,"mtime":1646322325790,"results":"62","hashOfConfig":"37"},{"size":1039,"mtime":1645228747310,"results":"63","hashOfConfig":"37"},{"size":5971,"mtime":1646322793414,"results":"64","hashOfConfig":"37"},{"size":3843,"mtime":1646320533728,"results":"65","hashOfConfig":"37"},{"size":270,"mtime":1645228747288,"results":"66","hashOfConfig":"37"},{"size":866,"mtime":1645720852941,"results":"67","hashOfConfig":"37"},{"size":2419,"mtime":1645721180463,"results":"68","hashOfConfig":"37"},{"size":366,"mtime":1646320489148,"results":"69","hashOfConfig":"37"},{"size":2741,"mtime":1646511713840,"results":"70","hashOfConfig":"37"},{"size":1707,"mtime":1646511656114,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ofbkyx",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"87"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"87"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\MERN-Project\\client\\src\\index.js",[],"C:\\Dev\\MERN-Project\\client\\src\\App.js",[],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Home.js",["151"],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Login.js",["152"],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Profile.js",["153"],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Submit.js",[],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Feed.js",["154","155","156"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport PostList from \"../components/posts/postList\";\r\nimport PageContainer from \"../components/layout/page-container\";\r\nimport MainContent from \"../components/layout/main-content\";\r\nimport NavSidebar from \"../components/layout/nav-sidebar/navSidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport plusIcon from \"../assets/icons/plusIcon.svg\";\r\nimport classes from \"./Feed.module.css\";\r\nimport NavSidebarLink from \"../components/layout/nav-sidebar/navSidebarLink\";\r\nimport { LoggedContext } from '../App';\r\n\r\nfunction Feed() {\r\n  const [technology, setTechnology] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  const { loggedStatus, checkLoggedStatus } = useContext(LoggedContext)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"http://localhost:3001/categories/\").then((response) => {\r\n      setCategories(response.data);\r\n    });\r\n  },[])\r\n\r\n  function updateTechnology(e){\r\n    if(e.keyCode == 13){\r\n      navigate(\"?technology=\"+technology)\r\n      setTechnology(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      \r\n      <PageContainer>\r\n        <NavSidebar>\r\n          <div className={classes.searchTechnologies}><input onKeyDown={updateTechnology} value={technology || \"\"} onChange={(e)=>setTechnology(e.target.value)} type=\"text\" placeholder=\"Search By Technology\"/></div>\r\n          <NavSidebarLink to=\"./\" linkTitle=\"Home\"/>\r\n          <div className={classes.searchCategories}>\r\n            <p className={classes.searchCategoriesTitle}>Categories</p>\r\n            { categories ? categories.map((category) => <Link key={category._id} to={\"?category=\"+category._id}>{category.name}</Link>) : null }\r\n          </div>\r\n          <NavSidebarLink to=\"?sortBy=mostlikes\" linkTitle=\"Most Likes\"/>\r\n          { loggedStatus !== false ? <>\r\n            <NavSidebarLink to=\"?likes=true\" linkTitle=\"Your Likes\"/>\r\n            <div className={classes.newPostButtonContainer}><Link className={classes.newPostButton} to=\"/submit\">New Idea <img src={plusIcon}></img></Link></div>\r\n          </> : null }\r\n        </NavSidebar>\r\n        <MainContent>\r\n          <PostList />\r\n        </MainContent>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n",["157","158"],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Register.js",["159"],"C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\PrivateRoute.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\Logout.js",["160"],"C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\googleLoginButton.js",["161","162"],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\page-container.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBar.js",["163"],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebar.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\main-content.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\userProfile.js",["164","165","166","167"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Post from \"../posts/post/post\";\r\nimport classes from \"./profile.module.css\";\r\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\r\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\r\nimport PostIcon from \"../../assets/icons/lightbulbIcon.svg\";\r\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\r\n\r\nfunction UserProfile() {\r\n    const [firstName,setFirstName] = useState(null);\r\n    const [lastName,setLastName] = useState(null);\r\n    const [bio,setBio] = useState(null);\r\n    const [accountDate,setAccountDate] = useState(null);\r\n    const [profilePicture,setProfilePicture] = useState(null);\r\n    const [profileBacksplash,setProfileBacksplash] = useState(null);\r\n    const [posts,setPosts] = useState([]);\r\n    const [postCount,setPostCount] = useState(0);\r\n    const [likedCount,setLikedCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:3001/users',{withCredentials: true}).then(function (response) {\r\n            if(response.data === false){\r\n                // error\r\n            }else{\r\n                const user = response.data;\r\n                console.log(response.data)\r\n                setFirstName(user.firstName);\r\n                setLastName(user.lastName);\r\n                setBio(user.bio);\r\n                setPosts(user.posts.reverse());\r\n                setAccountDate(user.accountDate);\r\n                setProfilePicture(user.profilePicture);\r\n                setProfileBacksplash(user.profileBacksplash);\r\n                setPostCount(user.postCount);\r\n                setLikedCount(user.likedCount);\r\n            }\r\n        })\r\n    },[])\r\n\r\n    function getMemberDate(timestamp){\r\n        const options = { year: \"numeric\", month: \"long\"}\r\n        const date = new Date(timestamp).toLocaleDateString(undefined, options);\r\n        return date;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className={classes.profileWrapper}>\r\n            <div className={classes.profileCoverPhoto} style={{backgroundImage: `url(${ profileBacksplash ? profileBacksplash : DefaultCover})`}}></div>\r\n            <div className={classes.profileFlex}>\r\n                <div className={classes.profileLeftBar}>\r\n                    { firstName && profilePicture === null ? <p className={classes.profileChar}>{firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { profilePicture !== null ? <div className={classes.profilePicture} style={{backgroundImage: `url(${profilePicture})`}}></div> : null }\r\n                    <div className={classes.profileName}>{firstName + \" \" + lastName}</div>\r\n                    <div className={classes.profileBio}>{bio}</div>\r\n                    <div className={classes.pofileInfo}>\r\n                        <div className={classes.profileInfoStat}><img src={PostIcon}/><span className={classes.profileStatTitle}>Ideas:</span> {postCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={HeartIcon}/><span className={classes.profileStatTitle}>Liked Ideas:</span> {likedCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={CalendarIcon}/><span className={classes.profileStatTitle}>Joined:</span> {getMemberDate(accountDate)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.profileRight}>\r\n                    <div className={classes.postsWrapper}>\r\n                        { posts.length > 0 ? posts.map((post) => (<Post key={post} postID={post} />)) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\postList.js",["168","169","170","171"],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebarLink.js",["172"],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\auth-layout\\authLayout.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBarUser.js",["173"],"import classes from \"./navBarUser.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction NavBarUser(props){\r\n    const [userInfo, setUserInfo] = useState([])\r\n    const [userDropdown,setUserDropdown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3001/users/user\", {userID: props.user}).then((response) => {\r\n            setUserInfo(response.data);\r\n        });\r\n    }, [props.user])\r\n\r\n    function toggleUserDropdown(){\r\n        setUserDropdown(!userDropdown);\r\n    }\r\n\r\n    return(\r\n        <div onClick={toggleUserDropdown} className={classes.navBarUser}>\r\n            <div className={classes.navBarUserWrapper}>\r\n                <div className={classes.PFP}>\r\n                    { userInfo.firstName ? <p className={classes.profileChar}>{userInfo.firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { userInfo.profilePicture ? <img src={userInfo.profilePicture}/> : null }\r\n                </div>\r\n                <div className={classes.username}>\r\n                    { userInfo.firstName && userInfo.lastName ? <p className={classes.displayName}>{userInfo.firstName} {userInfo.lastName}</p> : null}\r\n                </div>\r\n            </div>\r\n            { userDropdown ? <>\r\n            <div className={classes.dropdown}>\r\n                <Link to=\"/profile/view\" className={classes.link}>Profile</Link>\r\n                <Link to=\"/profile/requests\" className={classes.link}>Requests</Link>\r\n                <Link to=\"/profile/settings\" className={classes.link}>Settings</Link>\r\n                <Link to=\"/logout\" className={classes.link}>Log Out</Link>\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBarUser","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\post.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postTech.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postMain.js",["174"],"import classes from \"./postMain.module.css\";\r\n\r\nfunction PostMain(props) {\r\n    return (\r\n        <div className={classes.postMain}>\r\n            {props.postImage ? <>\r\n                <div className={classes.postImage}><img src={props.postImage}/><div className={classes.shadow}></div></div>\r\n            </>: null}\r\n            <h1 className={classes.postTitle}>{props.postTitle}</h1>\r\n            <p className={classes.postDesc}>{props.postDesc}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostMain;","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\categoryBar.js",["175"],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postHeader.js",["176","177","178","179","180"],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postInteractions.js",["181","182","183"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport classes from \"./postInteractions.module.css\";\r\nimport heartIcon from \"../../../assets/icons/heartIcon.svg\";\r\nimport heartIconLiked from \"../../../assets/icons/heartIcon-liked.svg\";\r\nimport requestIcon from \"../../../assets/icons/requestIcon.svg\";\r\nimport commentIcon from \"../../../assets/icons/commentIcon.svg\";\r\nimport { LoggedContext } from \"../../../App\";\r\nimport { PostContext } from \"./post.js\";\r\n\r\nfunction PostInteractions(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [requestAlreadyMade, setRequestAlreadyMade] = useState(false);\r\n    const [postLiked, setPostLiked] = useState(false);\r\n    const [request, setRequest] = useState(false);\r\n    const {postUpToDate, setPostUpToDate} = useContext(PostContext);\r\n    const {loggedStatus, setLoggedStatus} = useContext(LoggedContext);\r\n\r\n    const [message, setMessege] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setPostLiked(props.postLikes.includes(loggedStatus));\r\n\r\n        if(loggedStatus !== false){\r\n            Axios.post(\"http://localhost:3001/requests/checkRequest\",{ postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setRequestAlreadyMade(true);\r\n                }\r\n            });\r\n        }\r\n    },[props.postLikes, loggedStatus]);\r\n\r\n    function toggleRequest(){\r\n        if(loggedStatus !== false){\r\n            setRequest(!request);\r\n        }else{\r\n            navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    function likePost(){\r\n        // If User is Logged in\r\n        if(loggedStatus !== false){\r\n            Axios.post(\"http://localhost:3001/posts/like\",{ userID: loggedStatus, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setPostUpToDate(!postUpToDate);\r\n                }else{\r\n                    console.log(response.data);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    function sendRequest(){\r\n        if(loggedStatus !== false){\r\n            Axios.post(\"http://localhost:3001/requests/createRequest\",{ message, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data.error === false){\r\n                    // success\r\n                    setMessege(\"\");\r\n                    setRequest(false);\r\n                    setRequestAlreadyMade(true);\r\n                }else{\r\n                    // fail\r\n                    alert(response.data.message);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className={classes.postInteractions}>\r\n            <div className={classes.postInteractionButton} onClick={likePost}><img src={postLiked ? heartIconLiked : heartIcon} alt=\"like button\"/>{props.postLikesCount}</div>\r\n            { !requestAlreadyMade ? <>\r\n            <div className={classes.postInteractionButton} onClick={toggleRequest}><img src={requestIcon} alt=\"request button\"/></div>\r\n            </> : <>\r\n            <div className={classes.postInteractionButtonRequestSent}>Request Sent</div>\r\n            </>}\r\n\r\n            { request ? <>\r\n            <div className={classes.requestOverlay} onClick={toggleRequest}></div>\r\n            <div className={classes.requestForm}>\r\n                <p className={classes.requestFormTitle}>Want to Collaborate?</p>\r\n                <textarea onChange={(e) => setMessege(e.target.value)} value={message || \"\"} className={classes.requestFormMessage} placeholder=\"Send a message with your request (optional).\"></textarea>\r\n                <p className={classes.requestFormDisclaimer}><span className={classes.requestFormAsterisk}>*</span> Sending request will give the poster access to your contact information (Email Address).</p>\r\n                <button className={classes.requestFormButton} onClick={sendRequest}>Request to Join</button>\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostInteractions;","C:\\Dev\\MERN-Project\\client\\src\\pages\\User.js",["184","185"],"C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\settings.js",["186","187"],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FormData from 'form-data';\r\nimport axios from \"axios\";\r\nimport classes from \"./settings.module.css\";\r\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\r\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\r\n\r\nfunction Settings() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [personalSettings, setPersonalSettings] = useState(false);\r\n    const [profilePictureSettings, setProfilePictureSettings] = useState(false);\r\n\r\n    // Personal Info States\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [bio, setBio] = useState(null);\r\n\r\n    // Profile Pictures States\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n    const [profileBacksplash, setProfileBacksplash] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:3001/users/getPersonalSettings\", { withCredentials: true }).then((response) => {\r\n            if(response.data !== false){\r\n                setFirstName(response.data.firstName);\r\n                setLastName(response.data.lastName);\r\n                setBio(response.data.bio);\r\n            }else{\r\n                console.log(\"error\");\r\n            }\r\n        });\r\n    },[])\r\n\r\n    function togglePersonalSettings(){\r\n        setPersonalSettings(!personalSettings);\r\n    }\r\n    function toggleProfilePictureSettings(){\r\n        setProfilePictureSettings(!profilePictureSettings);\r\n    }\r\n\r\n    function updatePersonalSettings(e){\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:3001/users/updatePersonalSettings\",{ firstName, lastName, bio } , { withCredentials: true }).then((response) => {\r\n            if(response.data.result !== false){\r\n                navigate(\"/profile/view\");\r\n            }else{\r\n                console.log(response.data.errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    function updateProfilePicture(e){\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n    \r\n        // Update the formData object\r\n        formData.append(\r\n            \"profilePicture\",\r\n            profilePicture,\r\n            profilePicture.name\r\n        );\r\n\r\n        const config = {\r\n            withCredentials: true,\r\n        };\r\n        axios.post(\"http://localhost:3001/users/updateProfilePicture\", formData, config ).then((response) => {\r\n            if(response.data.error === true){\r\n                console.log(response.data.message)\r\n            }else{\r\n                navigate(\"/profile/view\");\r\n            }\r\n        });\r\n    }\r\n    async function updateProfileBacksplash(e){\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n    \r\n        // Update the formData object\r\n        formData.append(\r\n            \"profileBacksplash\",\r\n            profileBacksplash,\r\n            profileBacksplash.name\r\n        );\r\n\r\n        const config = {\r\n            withCredentials: true,\r\n        };\r\n        axios.post(\"http://localhost:3001/users/updateProfileBacksplash\", formData, config ).then((response) => {\r\n            if(response.data.error === true){\r\n                console.log(response.data.message)\r\n            }else{\r\n                navigate(\"/profile/view\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <h1 className={classes.settingsTitle}>Settings</h1>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={togglePersonalSettings}>Personal Info <img src={ personalSettings ? DownArrow : RightArrow}/></div>\r\n                    <form className={classes.settingsForm} style={{display: personalSettings ? \"block\": \"none\"}}>\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} value={firstName || \"\"}/>\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} value={lastName || \"\"}/>\r\n                        <label>Bio</label>\r\n                        <textarea placeholder=\"Bio\" onChange={(e) => setBio(e.target.value)} value={bio || \"\"}></textarea>\r\n                        <button onClick={updatePersonalSettings}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={toggleProfilePictureSettings}>Profile Picture and Backsplash <img src={ profilePictureSettings ? DownArrow : RightArrow}/></div>\r\n                    <div className={classes.profileUploadsWrapper} style={{display: profilePictureSettings ? \"block\" : \"none\"}}>\r\n                        <div className={classes.fileUploadForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Picture</h1>\r\n                            <input type=\"file\" onChange={(e) => {setProfilePicture(e.target.files[0])}} />\r\n                            <button onClick={updateProfilePicture}>Update</button>\r\n                        </div>\r\n                        <form className={classes.fileUploadForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Backsplash</h1>\r\n                            <input type=\"file\" onChange={(e)=> {setProfileBacksplash(e.target.files[0])}} />\r\n                            <button onClick={updateProfileBacksplash}>Update</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\publicProfile.js",["188","189","190"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"../posts/post/post\";\r\nimport classes from \"./profile.module.css\";\r\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\r\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\r\nimport PostIcon from \"../../assets/icons/lightbulbIcon.svg\";\r\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\r\n\r\nfunction PublicProfile(props) {\r\n    const [firstName,setFirstName] = useState(null);\r\n    const [lastName,setLastName] = useState(null);\r\n    const [bio,setBio] = useState(null);\r\n    const [accountDate,setAccountDate] = useState(null);\r\n    const [profilePicture,setProfilePicture] = useState(null);\r\n    const [profileBacksplash,setProfileBacksplash] = useState(null);\r\n    const [posts,setPosts] = useState([]);\r\n    const [postCount,setPostCount] = useState(0);\r\n    const [likedCount,setLikedCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(props.userID != null){\r\n            axios.post('http://localhost:3001/users/public',{ userID: props.userID }).then(function (response) {\r\n                if(response.data === false){\r\n                    console.log(\"error\");\r\n                }else{\r\n                    const user = response.data;\r\n                    setFirstName(user.firstName);\r\n                    setLastName(user.lastName);\r\n                    setBio(user.bio);\r\n                    setPosts(user.posts.reverse());\r\n                    setAccountDate(user.accountDate);\r\n                    setProfilePicture(user.profilePicture);\r\n                    setProfileBacksplash(user.profileBacksplash);\r\n                    setPostCount(user.postCount);\r\n                    setLikedCount(user.likedCount);\r\n                }\r\n            });\r\n        }\r\n    },[props.userID])\r\n\r\n    function getMemberDate(timestamp){\r\n        const options = { year: \"numeric\", month: \"long\"}\r\n        const date = new Date(timestamp).toLocaleDateString(undefined, options);\r\n        return date;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className={classes.profileWrapper}>\r\n            <div className={classes.profileCoverPhoto} style={{backgroundImage: `url(${ profileBacksplash ? profileBacksplash : DefaultCover})`}}></div>\r\n            <div className={classes.profileFlex}>\r\n                <div className={classes.profileLeftBar}>\r\n                    { firstName && profilePicture === null ? <p className={classes.profileChar}>{firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { profilePicture !== null ? <div className={classes.profilePicture} style={{backgroundImage: `url(${profilePicture})`}}></div> : null }\r\n                    <div className={classes.profileName}>{firstName + \" \" + lastName}</div>\r\n                    <div className={classes.profileBio}>{bio}</div>\r\n                    <div className={classes.pofileInfo}>\r\n                        <div className={classes.profileInfoStat}><img src={PostIcon}/><span className={classes.profileStatTitle}>Posts: </span>{postCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={HeartIcon}/><span className={classes.profileStatTitle}>Liked Posts: </span>{likedCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={CalendarIcon}/><span className={classes.profileStatTitle}>Joined: </span>{getMemberDate(accountDate)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.profileRight}>\r\n                    <div className={classes.postsWrapper}>\r\n                        { posts.length > 0 ? posts.map((post) => (<Post key={post} postID={post} />)) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicProfile;","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\noResults.js",["191"],"C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\requests.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\request.js",["192","193"],"C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\profilePicture.js",["194"],"import classes from \"./profilePicture.module.css\";\r\n\r\nfunction ProfilePicture(props) {\r\n\r\n  return (\r\n    <div className={classes.PFP}>\r\n        <p className={classes.profileChar}>{props.firstName.charAt(0).toUpperCase()}</p>\r\n        { props.profilePicture !== null ? <img src={props.profilePicture}/> : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePicture;","C:\\Dev\\MERN-Project\\client\\src\\pages\\About.js",["195","196","197"],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\footer.js",[],{"ruleId":"198","severity":1,"message":"199","line":21,"column":12,"nodeType":"200","messageId":"201","endLine":21,"endColumn":23},{"ruleId":"198","severity":1,"message":"202","line":13,"column":10,"nodeType":"200","messageId":"201","endLine":13,"endColumn":22},{"ruleId":"198","severity":1,"message":"203","line":15,"column":24,"nodeType":"200","messageId":"201","endLine":15,"endColumn":39},{"ruleId":"198","severity":1,"message":"204","line":19,"column":25,"nodeType":"200","messageId":"201","endLine":19,"endColumn":42},{"ruleId":"205","severity":1,"message":"206","line":30,"column":18,"nodeType":"207","messageId":"208","endLine":30,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":51,"column":123,"nodeType":"211","endLine":51,"endColumn":143},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"198","severity":1,"message":"202","line":13,"column":10,"nodeType":"200","messageId":"201","endLine":13,"endColumn":22},{"ruleId":"198","severity":1,"message":"202","line":10,"column":13,"nodeType":"200","messageId":"201","endLine":10,"endColumn":25},{"ruleId":"198","severity":1,"message":"216","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":14},{"ruleId":"209","severity":1,"message":"210","line":8,"column":118,"nodeType":"211","endLine":8,"endColumn":142},{"ruleId":"198","severity":1,"message":"203","line":10,"column":24,"nodeType":"200","messageId":"201","endLine":10,"endColumn":39},{"ruleId":"198","severity":1,"message":"216","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"210","line":59,"column":66,"nodeType":"211","endLine":59,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":60,"column":66,"nodeType":"211","endLine":60,"endColumn":88},{"ruleId":"209","severity":1,"message":"210","line":61,"column":66,"nodeType":"211","endLine":61,"endColumn":91},{"ruleId":"198","severity":1,"message":"217","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":13},{"ruleId":"198","severity":1,"message":"218","line":11,"column":9,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"198","severity":1,"message":"219","line":13,"column":24,"nodeType":"200","messageId":"201","endLine":13,"endColumn":39},{"ruleId":"220","severity":1,"message":"221","line":18,"column":6,"nodeType":"222","endLine":18,"endColumn":20,"suggestions":"223"},{"ruleId":"209","severity":1,"message":"210","line":7,"column":107,"nodeType":"211","endLine":7,"endColumn":125},{"ruleId":"209","severity":1,"message":"210","line":25,"column":49,"nodeType":"211","endLine":25,"endColumn":85},{"ruleId":"209","severity":1,"message":"210","line":7,"column":52,"nodeType":"211","endLine":7,"endColumn":80},{"ruleId":"198","severity":1,"message":"224","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":17},{"ruleId":"198","severity":1,"message":"204","line":14,"column":26,"nodeType":"200","messageId":"201","endLine":14,"endColumn":43},{"ruleId":"198","severity":1,"message":"218","line":19,"column":11,"nodeType":"200","messageId":"201","endLine":19,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":24,"column":29,"nodeType":"207","messageId":"208","endLine":24,"endColumn":31},{"ruleId":"220","severity":1,"message":"225","line":26,"column":7,"nodeType":"222","endLine":26,"endColumn":21,"suggestions":"226"},{"ruleId":"209","severity":1,"message":"210","line":53,"column":17,"nodeType":"211","endLine":53,"endColumn":42},{"ruleId":"198","severity":1,"message":"227","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":19},{"ruleId":"198","severity":1,"message":"203","line":20,"column":26,"nodeType":"200","messageId":"201","endLine":20,"endColumn":41},{"ruleId":"220","severity":1,"message":"228","line":34,"column":7,"nodeType":"222","endLine":34,"endColumn":38,"suggestions":"229"},{"ruleId":"198","severity":1,"message":"230","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":19},{"ruleId":"198","severity":1,"message":"219","line":11,"column":26,"nodeType":"200","messageId":"201","endLine":11,"endColumn":41},{"ruleId":"209","severity":1,"message":"210","line":108,"column":114,"nodeType":"211","endLine":108,"endColumn":169},{"ruleId":"209","severity":1,"message":"210","line":123,"column":137,"nodeType":"211","endLine":123,"endColumn":198},{"ruleId":"209","severity":1,"message":"210","line":59,"column":66,"nodeType":"211","endLine":59,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":60,"column":66,"nodeType":"211","endLine":60,"endColumn":88},{"ruleId":"209","severity":1,"message":"210","line":61,"column":66,"nodeType":"211","endLine":61,"endColumn":91},{"ruleId":"209","severity":1,"message":"210","line":6,"column":53,"nodeType":"211","endLine":6,"endColumn":78},{"ruleId":"198","severity":1,"message":"231","line":2,"column":16,"nodeType":"200","messageId":"201","endLine":2,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":18,"column":29,"nodeType":"207","messageId":"208","endLine":18,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":8,"column":43,"nodeType":"211","endLine":8,"endColumn":76},{"ruleId":"198","severity":1,"message":"232","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"210","line":12,"column":17,"nodeType":"211","endLine":12,"endColumn":61},{"ruleId":"233","severity":1,"message":"234","line":14,"column":60,"nodeType":"211","endLine":14,"endColumn":127},"no-unused-vars","'toMyWebsite' is defined but never used.","Identifier","unusedVar","'loggedStatus' is assigned a value but never used.","'setLoggedStatus' is assigned a value but never used.","'checkLoggedStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'Link' is defined but never used.","'Axios' is defined but never used.","'navigate' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkParams'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'DownArrow' is defined but never used.","React Hook useEffect has a missing dependency: 'loggedStatus'. Either include it or remove the dependency array.",["238"],"'commentIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.postID'. Either include it or remove the dependency array.",["239"],"'UserProfile' is defined but never used.","'useNavigate' is defined but never used.","'FadeIn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [checkParams, searchParams]",{"range":"246","text":"247"},"Update the dependencies array to be: [loggedStatus, props.userID]",{"range":"248","text":"249"},"Update the dependencies array to be: [props.postLikes, loggedStatus, props.postID]",{"range":"250","text":"251"},[535,549],"[checkParams, searchParams]",[1158,1172],"[loggedStatus, props.userID]",[1417,1448],"[props.postLikes, loggedStatus, props.postID]"]