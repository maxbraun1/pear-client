{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\MERN-Project\\\\client\\\\src\\\\components\\\\profile\\\\settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useInRouterContext, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classes from \"./settings.module.css\";\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Settings() {\n  _s();\n\n  const navigate = useNavigate();\n  const [personalSettings, setPersonalSettings] = useState(true); // Personal Info States\n\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [bio, setBio] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/users/getPersonalSettings\", {\n      withCredentials: true\n    }).then(response => {\n      if (response.data !== false) {\n        setFirstName(response.data.firstName);\n        setLastName(response.data.lastName);\n        setBio(response.data.bio);\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }, []);\n\n  function togglePersonalSettings() {\n    setPersonalSettings(!personalSettings);\n  }\n\n  function updatePersonalSettings(e) {\n    e.preventDefault();\n    axios.post(\"http://localhost:3001/users/updatePersonalSettings\", {\n      firstName,\n      lastName,\n      bio\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.result !== false) {\n        navigate(\"/profile/view\");\n      } else {\n        console.log(response.data.errors);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.settings,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.settingsTitle,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.settingsSectionWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.settingsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.settinsSectionHeader,\n          onClick: togglePersonalSettings,\n          children: [\"Personal Info \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: personalSettings ? DownArrow : RightArrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 114\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.settingsForm,\n          style: {\n            display: personalSettings ? \"block\" : \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            onChange: e => setFirstName(e.target.value),\n            value: firstName || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Last Name\",\n            onChange: e => setLastName(e.target.value),\n            value: lastName || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Bio\",\n            onChange: e => setBio(e.target.value),\n            value: bio || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updatePersonalSettings,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Settings, \"wQJsQ9Kxs+DW3L2/dy0rHYYBed8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/profile/settings.js"],"names":["useState","useEffect","useInRouterContext","useNavigate","axios","classes","RightArrow","DownArrow","Settings","navigate","personalSettings","setPersonalSettings","firstName","setFirstName","lastName","setLastName","bio","setBio","get","withCredentials","then","response","data","console","log","togglePersonalSettings","updatePersonalSettings","e","preventDefault","post","result","errors","settings","settingsTitle","settingsSectionWrapper","settingsSection","settinsSectionHeader","settingsForm","display","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useInRouterContext, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport classes from \"./settings.module.css\";\r\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\r\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\r\n\r\nfunction Settings() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [personalSettings, setPersonalSettings] = useState(true);\r\n\r\n    // Personal Info States\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [bio, setBio] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:3001/users/getPersonalSettings\", { withCredentials: true }).then((response) => {\r\n            if(response.data !== false){\r\n                setFirstName(response.data.firstName);\r\n                setLastName(response.data.lastName);\r\n                setBio(response.data.bio);\r\n            }else{\r\n                console.log(\"error\");\r\n            }\r\n        });\r\n    },[])\r\n\r\n    function togglePersonalSettings(){\r\n        setPersonalSettings(!personalSettings);\r\n    }\r\n\r\n    function updatePersonalSettings(e){\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:3001/users/updatePersonalSettings\",{ firstName, lastName, bio } , { withCredentials: true }).then((response) => {\r\n            if(response.data.result !== false){\r\n                navigate(\"/profile/view\");\r\n            }else{\r\n                console.log(response.data.errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <h1 className={classes.settingsTitle}>Settings</h1>\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={togglePersonalSettings}>Personal Info <img src={ personalSettings ? DownArrow : RightArrow}/></div>\r\n                    <form className={classes.settingsForm} style={{display: personalSettings ? \"block\": \"none\"}}>\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} value={firstName || \"\"}/>\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} value={lastName || \"\"}/>\r\n                        <label>Bio</label>\r\n                        <textarea placeholder=\"Bio\" onChange={(e) => setBio(e.target.value)} value={bio || \"\"}></textarea>\r\n                        <button onClick={updatePersonalSettings}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}