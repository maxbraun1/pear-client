{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\MERN-Project\\\\client\\\\src\\\\components\\\\posts\\\\postList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Post from \"./post/post\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport classes from \"./postList.module.css\";\nimport axios from \"axios\";\nimport NoResults from \"../Misc/noResults.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostList() {\n  _s();\n\n  const [listOfPosts, setListOfPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    checkParams(searchParams);\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.postList,\n    children: listOfPosts.length > 0 ? listOfPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      postID: post\n    }, post, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 61\n    }, this)) : /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 99\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n\n  function checkParams(param) {\n    if (param.get('sortBy')) {\n      sortBy(param.get('sortBy'));\n    } else if (param.get('likes')) {\n      getLikedPosts();\n    } else if (param.get('technology')) {\n      searchTechnology(param.get('technology'));\n    } else if (param.get('category')) {\n      getByCategory(param.get('category'));\n    } else if (param.get('postID')) {\n      getByID(param.get('postID'));\n    } else {\n      getDefault();\n    }\n  }\n\n  function searchTechnology(technology) {\n    axios.post(\"http://localhost:3001/posts/search\", {\n      pageNum: 1,\n      technology\n    }).then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function sortBy(sortBy) {\n    axios.post(\"http://localhost:3001/posts/sort\", {\n      pageNum: 1,\n      sortBy\n    }).then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function getLikedPosts() {\n    axios.post(\"http://localhost:3001/posts/liked\", {\n      pageNum: 1\n    }, {\n      withCredentials: true\n    }).then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function getByCategory(category) {\n    axios.post(\"http://localhost:3001/posts/category\", {\n      pageNum: 1,\n      categoryID: category\n    }, {\n      withCredentials: true\n    }).then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function getByID(category) {\n    axios.get(\"http://localhost:3001/posts/id\").then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function getDefault() {\n    axios.post(\"http://localhost:3001/posts/default\", {\n      pageNum: 1\n    }).then(response => {\n      handleResults(response.data);\n    });\n  }\n\n  function handleResults(results) {\n    if (results.error) {\n      console.log(\"Error: \", results.errorMessage);\n    } else {\n      setListOfPosts(results);\n    }\n  }\n}\n\n_s(PostList, \"/P6U86y6XQX4N4ERdwkDPWWLfB4=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/posts/postList.js"],"names":["useState","useEffect","Axios","Post","useNavigate","useSearchParams","classes","axios","NoResults","PostList","listOfPosts","setListOfPosts","navigate","searchParams","setSearchParams","checkParams","postList","length","map","post","param","get","sortBy","getLikedPosts","searchTechnology","getByCategory","getByID","getDefault","technology","pageNum","then","response","handleResults","data","withCredentials","category","categoryID","results","error","console","log","errorMessage"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Post from \"./post/post\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport classes from \"./postList.module.css\";\r\nimport axios from \"axios\";\r\nimport NoResults from \"../Misc/noResults.js\";\r\n\r\nfunction PostList() {\r\n  const [listOfPosts, setListOfPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n\r\n  useEffect(() => {\r\n    checkParams(searchParams);\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className={classes.postList}>\r\n      { listOfPosts.length > 0 ? listOfPosts.map((post) => (<Post key={post} postID={post} />)) : <NoResults/>}\r\n    </div>\r\n  );\r\n\r\n  function checkParams(param) {\r\n    if(param.get('sortBy')){\r\n      sortBy(param.get('sortBy'));\r\n    }else if(param.get('likes')){\r\n      getLikedPosts();\r\n    }else if(param.get('technology')){\r\n      searchTechnology(param.get('technology'));\r\n    }else if(param.get('category')){\r\n      getByCategory(param.get('category'));\r\n    }else if(param.get('postID')){\r\n      getByID(param.get('postID'));\r\n    }else{\r\n      getDefault();\r\n    }\r\n  }\r\n\r\n  function searchTechnology(technology){\r\n    axios.post(\"http://localhost:3001/posts/search\", { pageNum: 1, technology }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function sortBy(sortBy){\r\n    axios.post(\"http://localhost:3001/posts/sort\", { pageNum: 1, sortBy }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getLikedPosts(){\r\n    axios.post(\"http://localhost:3001/posts/liked\", { pageNum: 1 }, {withCredentials: true}).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getByCategory(category){\r\n    axios.post(\"http://localhost:3001/posts/category\", { pageNum: 1, categoryID: category }, {withCredentials: true}).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getByID(category){\r\n    axios.get(\"http://localhost:3001/posts/id\").then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getDefault(){\r\n    axios.post(\"http://localhost:3001/posts/default\", { pageNum: 1 }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n\r\n\r\n  function handleResults(results){\r\n    if(results.error){\r\n      console.log(\"Error: \", results.errorMessage);\r\n    }else{\r\n      setListOfPosts(results);\r\n    }\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}