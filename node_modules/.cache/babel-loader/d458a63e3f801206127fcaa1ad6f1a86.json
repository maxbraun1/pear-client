{"ast":null,"code":"import _slicedToArray from\"C:\\\\Dev\\\\MERN-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useState,useEffect,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";import Axios from\"axios\";import classes from\"./postInteractions.module.css\";import heartIcon from\"../../../assets/icons/heartIcon.svg\";import heartIconLiked from\"../../../assets/icons/heartIcon-liked.svg\";import requestIcon from\"../../../assets/icons/requestIcon.svg\";import commentIcon from\"../../../assets/icons/commentIcon.svg\";import{LoggedContext}from\"../../../App\";import{PostContext}from\"./post.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PostInteractions(props){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestAlreadyMade=_useState2[0],setRequestAlreadyMade=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),postLiked=_useState4[0],setPostLiked=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),request=_useState6[0],setRequest=_useState6[1];var _useContext=useContext(PostContext),postUpToDate=_useContext.postUpToDate,setPostUpToDate=_useContext.setPostUpToDate;var _useContext2=useContext(LoggedContext),loggedStatus=_useContext2.loggedStatus,setLoggedStatus=_useContext2.setLoggedStatus;var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessege=_useState8[1];useEffect(function(){setPostLiked(props.postLikes.includes(loggedStatus));if(loggedStatus!==false){Axios.post(process.env.REACT_APP_API+\"/requests/checkRequest\",{postID:props.postID},{withCredentials:true}).then(function(response){if(response.data===true){setRequestAlreadyMade(true);}});}},[props.postLikes,loggedStatus]);function toggleRequest(){if(loggedStatus!==false){setRequest(!request);}else{navigate(\"/login\");}}function likePost(){// If User is Logged in\nif(loggedStatus!==false){Axios.post(process.env.REACT_APP_API+\"/posts/like\",{userID:loggedStatus,postID:props.postID},{withCredentials:true}).then(function(response){if(response.data===true){setPostUpToDate(!postUpToDate);}else{console.log(response.data);}});}else{navigate(\"/login\");}}function sendRequest(){if(loggedStatus!==false){Axios.post(process.env.REACT_APP_API+\"/requests/createRequest\",{message:message,postID:props.postID},{withCredentials:true}).then(function(response){if(response.data.error===false){// success\nsetMessege(\"\");setRequest(false);setRequestAlreadyMade(true);}else{// fail\nalert(response.data.message);}});}else{navigate(\"/login\");}}return/*#__PURE__*/_jsxs(\"div\",{className:classes.postInteractions,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.postInteractionButton,onClick:likePost,children:[/*#__PURE__*/_jsx(\"img\",{src:postLiked?heartIconLiked:heartIcon,alt:\"like button\"}),props.postLikesCount]}),!requestAlreadyMade?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:classes.postInteractionButton,onClick:toggleRequest,children:/*#__PURE__*/_jsx(\"img\",{src:requestIcon,alt:\"request button\"})})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:classes.postInteractionButtonRequestSent,children:\"Request Sent\"})}),request?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.requestOverlay,onClick:toggleRequest}),/*#__PURE__*/_jsxs(\"div\",{className:classes.requestForm,children:[/*#__PURE__*/_jsx(\"p\",{className:classes.requestFormTitle,children:\"Want to Collaborate?\"}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){return setMessege(e.target.value);},value:message||\"\",className:classes.requestFormMessage,placeholder:\"Send a message with your request (optional).\"}),/*#__PURE__*/_jsxs(\"p\",{className:classes.requestFormDisclaimer,children:[/*#__PURE__*/_jsx(\"span\",{className:classes.requestFormAsterisk,children:\"*\"}),\" Sending request will give the poster access to your contact information (Email Address).\"]}),/*#__PURE__*/_jsx(\"button\",{className:classes.requestFormButton,onClick:sendRequest,children:\"Request to Join\"})]})]}):null]});}export default PostInteractions;","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/posts/post/postInteractions.js"],"names":["useState","useEffect","useContext","useNavigate","Axios","classes","heartIcon","heartIconLiked","requestIcon","commentIcon","LoggedContext","PostContext","PostInteractions","props","navigate","requestAlreadyMade","setRequestAlreadyMade","postLiked","setPostLiked","request","setRequest","postUpToDate","setPostUpToDate","loggedStatus","setLoggedStatus","message","setMessege","postLikes","includes","post","process","env","REACT_APP_API","postID","withCredentials","then","response","data","toggleRequest","likePost","userID","console","log","sendRequest","error","alert","postInteractions","postInteractionButton","postLikesCount","postInteractionButtonRequestSent","requestOverlay","requestForm","requestFormTitle","e","target","value","requestFormMessage","requestFormDisclaimer","requestFormAsterisk","requestFormButton"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport classes from \"./postInteractions.module.css\";\r\nimport heartIcon from \"../../../assets/icons/heartIcon.svg\";\r\nimport heartIconLiked from \"../../../assets/icons/heartIcon-liked.svg\";\r\nimport requestIcon from \"../../../assets/icons/requestIcon.svg\";\r\nimport commentIcon from \"../../../assets/icons/commentIcon.svg\";\r\nimport { LoggedContext } from \"../../../App\";\r\nimport { PostContext } from \"./post.js\";\r\n\r\nfunction PostInteractions(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [requestAlreadyMade, setRequestAlreadyMade] = useState(false);\r\n    const [postLiked, setPostLiked] = useState(false);\r\n    const [request, setRequest] = useState(false);\r\n    const {postUpToDate, setPostUpToDate} = useContext(PostContext);\r\n    const {loggedStatus, setLoggedStatus} = useContext(LoggedContext);\r\n\r\n    const [message, setMessege] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setPostLiked(props.postLikes.includes(loggedStatus));\r\n\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/requests/checkRequest\",{ postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setRequestAlreadyMade(true);\r\n                }\r\n            });\r\n        }\r\n    },[props.postLikes, loggedStatus]);\r\n\r\n    function toggleRequest(){\r\n        if(loggedStatus !== false){\r\n            setRequest(!request);\r\n        }else{\r\n            navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    function likePost(){\r\n        // If User is Logged in\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/posts/like\",{ userID: loggedStatus, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setPostUpToDate(!postUpToDate);\r\n                }else{\r\n                    console.log(response.data);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    function sendRequest(){\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/requests/createRequest\",{ message, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data.error === false){\r\n                    // success\r\n                    setMessege(\"\");\r\n                    setRequest(false);\r\n                    setRequestAlreadyMade(true);\r\n                }else{\r\n                    // fail\r\n                    alert(response.data.message);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className={classes.postInteractions}>\r\n            <div className={classes.postInteractionButton} onClick={likePost}><img src={postLiked ? heartIconLiked : heartIcon} alt=\"like button\"/>{props.postLikesCount}</div>\r\n            { !requestAlreadyMade ? <>\r\n            <div className={classes.postInteractionButton} onClick={toggleRequest}><img src={requestIcon} alt=\"request button\"/></div>\r\n            </> : <>\r\n            <div className={classes.postInteractionButtonRequestSent}>Request Sent</div>\r\n            </>}\r\n\r\n            { request ? <>\r\n            <div className={classes.requestOverlay} onClick={toggleRequest}></div>\r\n            <div className={classes.requestForm}>\r\n                <p className={classes.requestFormTitle}>Want to Collaborate?</p>\r\n                <textarea onChange={(e) => setMessege(e.target.value)} value={message || \"\"} className={classes.requestFormMessage} placeholder=\"Send a message with your request (optional).\"></textarea>\r\n                <p className={classes.requestFormDisclaimer}><span className={classes.requestFormAsterisk}>*</span> Sending request will give the poster access to your contact information (Email Address).</p>\r\n                <button className={classes.requestFormButton} onClick={sendRequest}>Request to Join</button>\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostInteractions;"]},"metadata":{},"sourceType":"module"}