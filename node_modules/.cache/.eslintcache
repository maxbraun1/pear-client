[{"C:\\Dev\\MERN-Project\\client\\src\\index.js":"1","C:\\Dev\\MERN-Project\\client\\src\\App.js":"2","C:\\Dev\\MERN-Project\\client\\src\\pages\\Home.js":"3","C:\\Dev\\MERN-Project\\client\\src\\pages\\Login.js":"4","C:\\Dev\\MERN-Project\\client\\src\\pages\\Profile.js":"5","C:\\Dev\\MERN-Project\\client\\src\\pages\\Submit.js":"6","C:\\Dev\\MERN-Project\\client\\src\\pages\\Feed.js":"7","C:\\Dev\\MERN-Project\\client\\src\\pages\\Register.js":"8","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\PrivateRoute.js":"9","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\Logout.js":"10","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\googleLoginButton.js":"11","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\page-container.js":"12","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBar.js":"13","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebar.js":"14","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\main-content.js":"15","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\userProfile.js":"16","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\postList.js":"17","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebarLink.js":"18","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\auth-layout\\authLayout.js":"19","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBarUser.js":"20","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\post.js":"21","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postTech.js":"22","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postMain.js":"23","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\categoryBar.js":"24","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postHeader.js":"25","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postInteractions.js":"26","C:\\Dev\\MERN-Project\\client\\src\\pages\\User.js":"27","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\settings.js":"28","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\publicProfile.js":"29","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\noResults.js":"30","C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\requests.js":"31","C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\request.js":"32","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\profilePicture.js":"33","C:\\Dev\\MERN-Project\\client\\src\\pages\\About.js":"34","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\footer.js":"35"},{"size":243,"mtime":1646767964946,"results":"36","hashOfConfig":"37"},{"size":1789,"mtime":1646764863577,"results":"38","hashOfConfig":"37"},{"size":4212,"mtime":1646509748122,"results":"39","hashOfConfig":"37"},{"size":1859,"mtime":1646765679961,"results":"40","hashOfConfig":"37"},{"size":1561,"mtime":1645714083168,"results":"41","hashOfConfig":"37"},{"size":5141,"mtime":1646765719817,"results":"42","hashOfConfig":"37"},{"size":2435,"mtime":1646765656334,"results":"43","hashOfConfig":"37"},{"size":2662,"mtime":1646765692151,"results":"44","hashOfConfig":"37"},{"size":190,"mtime":1644947532389,"results":"45","hashOfConfig":"37"},{"size":739,"mtime":1646765333478,"results":"46","hashOfConfig":"37"},{"size":414,"mtime":1646765258824,"results":"47","hashOfConfig":"37"},{"size":194,"mtime":1644947532392,"results":"48","hashOfConfig":"37"},{"size":977,"mtime":1645552500894,"results":"49","hashOfConfig":"37"},{"size":197,"mtime":1644947532391,"results":"50","hashOfConfig":"37"},{"size":187,"mtime":1644947532390,"results":"51","hashOfConfig":"37"},{"size":3782,"mtime":1646765594334,"results":"52","hashOfConfig":"37"},{"size":2403,"mtime":1646765559207,"results":"53","hashOfConfig":"37"},{"size":383,"mtime":1644947532391,"results":"54","hashOfConfig":"37"},{"size":655,"mtime":1645552500892,"results":"55","hashOfConfig":"37"},{"size":1809,"mtime":1646765383713,"results":"56","hashOfConfig":"37"},{"size":1451,"mtime":1646765453410,"results":"57","hashOfConfig":"37"},{"size":403,"mtime":1646505893234,"results":"58","hashOfConfig":"37"},{"size":507,"mtime":1646324484458,"results":"59","hashOfConfig":"37"},{"size":744,"mtime":1646765416734,"results":"60","hashOfConfig":"37"},{"size":2845,"mtime":1646765473167,"results":"61","hashOfConfig":"37"},{"size":4237,"mtime":1646765502825,"results":"62","hashOfConfig":"37"},{"size":1039,"mtime":1645228747310,"results":"63","hashOfConfig":"37"},{"size":5999,"mtime":1646766234775,"results":"64","hashOfConfig":"37"},{"size":3850,"mtime":1646765577572,"results":"65","hashOfConfig":"37"},{"size":270,"mtime":1645228747288,"results":"66","hashOfConfig":"37"},{"size":873,"mtime":1646765623565,"results":"67","hashOfConfig":"37"},{"size":2426,"mtime":1646765609929,"results":"68","hashOfConfig":"37"},{"size":366,"mtime":1646320489148,"results":"69","hashOfConfig":"37"},{"size":2741,"mtime":1646511713840,"results":"70","hashOfConfig":"37"},{"size":1714,"mtime":1646765365127,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ofbkyx",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"77"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"77"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\MERN-Project\\client\\src\\index.js",[],"C:\\Dev\\MERN-Project\\client\\src\\App.js",["167"],"import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/Auth/PrivateRoute\";\r\nimport axios from \"axios\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Feed from \"./pages/Feed\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Login from \"./pages/Login\";\r\nimport Logout from \"./components/Auth/Logout.js\";\r\nimport Register from \"./pages/Register\";\r\nimport Submit from \"./pages/Submit\";\r\nimport User from \"./pages/User\";\r\nimport About from \"./pages/About\";\r\n\r\nexport const LoggedContext = React.createContext();\r\n\r\nfunction App(){\r\n  const {REACT_APP_API} = process.env;\r\n  const [loggedStatus, setLoggedStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkLoggedStatus();\r\n  }, [])\r\n  \r\n  return (\r\n    <LoggedContext.Provider value={{loggedStatus, checkLoggedStatus}}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/feed\" element={<Feed />} />\r\n        <Route path=\"/logout\" element={<PrivateRoute auth={loggedStatus}><Logout/></PrivateRoute>} />\r\n        <Route path=\"/submit\" element={<PrivateRoute auth={loggedStatus}><Submit/></PrivateRoute>} />\r\n        <Route path=\"/profile/*\" element={<PrivateRoute auth={loggedStatus}><Profile /></PrivateRoute>} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/user\" element={<User />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n      </Routes>\r\n    </LoggedContext.Provider>\r\n  );\r\n\r\n  function checkLoggedStatus(){\r\n    axios.get(REACT_APP_API + \"/auth/loggedStatus\", {withCredentials: true}).then(response => {\r\n      setLoggedStatus(response.data);\r\n    })\r\n  }\r\n}\r\n\r\nexport default App;\r\n",["168","169"],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Home.js",["170"],"import NavBar from \"../components/layout/navBar\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport classes from './Home.module.css';\r\nimport BackgroundPattern from '../assets/images/pearLogoPattern.svg';\r\nimport FadeIn from 'react-fade-in';\r\nimport CollaborateIcon from '../assets/icons/featureIcons/collaborateIcon.svg';\r\nimport LightbulbIcon from '../assets/icons/featureIcons/lightbulbIcon.svg';\r\nimport SearchIcon from '../assets/icons/featureIcons/searchIcon.svg';\r\nimport SendIcon from '../assets/icons/featureIcons/sendIcon.svg';\r\nimport Post from \"../components/posts/post/post\";\r\nimport Footer from \"../components/layout/footer\";\r\n\r\nfunction Home() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  function headButton(){\r\n    navigate('/register');\r\n  }\r\n  function toMyWebsite(){\r\n    navigate(\"https://maxbraun.us\");\r\n  }\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className={classes.header} style={{backgroundImage: `url(${BackgroundPattern})`}}>\r\n        <div className={classes.headerLeft}>\r\n          <div className={classes.headerLeftContainer}>\r\n            <FadeIn>\r\n              <h1 className={classes.headTitle}>Pear Programming</h1>\r\n              <p className={classes.headDesc}>A place for developers to share ideas, find inspiration, and work together to build their skills and resumes.</p>\r\n              <button onClick={headButton} className={classes.headButton}>Create an account</button>\r\n            </FadeIn>\r\n          </div>\r\n        </div>\r\n        <div className={classes.headerRight}>\r\n          <FadeIn>\r\n          <div className={classes.feature}>\r\n            <img className={classes.featureIcon} alt=\"lightbulb\" src={LightbulbIcon}/>\r\n            <div className={classes.featureInfo}>\r\n              <h2 className={classes.featureTitle}>Post Ideas</h2>\r\n              <p className={classes.featureDesc}>Post and describe your great ideas!</p>\r\n            </div>\r\n          </div>\r\n          <div className={classes.feature}>\r\n            <img className={classes.featureIcon} alt=\"search icon\" src={SearchIcon}/>\r\n            <div className={classes.featureInfo}>\r\n              <h2 className={classes.featureTitle}>Search Ideas</h2>\r\n              <p className={classes.featureDesc}>Search by development category, popularity, or technology tags.</p>\r\n            </div>\r\n          </div>\r\n          <div className={classes.feature}>\r\n            <img className={classes.featureIcon} alt=\"send icon\" src={SendIcon}/>\r\n            <div className={classes.featureInfo}>\r\n              <h2 className={classes.featureTitle}>Send Requests</h2>\r\n              <p className={classes.featureDesc}>Find an idea you like? Send a collaboration request to the post creator.</p>\r\n            </div>\r\n          </div>\r\n          <div className={classes.feature}>\r\n            <img className={classes.featureIcon} alt=\"collab icon\" src={CollaborateIcon}/>\r\n            <div className={classes.featureInfo}>\r\n              <h2 className={classes.featureTitle}>Team Up</h2>\r\n              <p className={classes.featureDesc}>Work together to create something great.</p>\r\n            </div>\r\n          </div>\r\n          </FadeIn>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={classes.about}>\r\n        <div className={classes.aboutDesc}>\r\n          <h1 className={classes.aboutDescTitle}>What is Pear Programming?</h1>\r\n          <p>Pear Programming is a place for junior developers to build their development skills, teamwork skills (pair programming), and resumes.</p>\r\n          <p>The idea behind this website is that it's often difficult for junior developers to find interesting and usefull projects to work on while building their resume and heading into the world of job searching. Businesses value a developer's ability and experience working with others, but it can be difficult to find developers with similar interests and skill levels to work with.</p>\r\n          <Link to=\"/about\"><button>Read More</button></Link>\r\n        </div>\r\n        <div className={classes.aboutPost}>\r\n          <Post key=\"1\" postID=\"6220ea3cea256d2f3ccc7377\"></Post>  \r\n        </div>\r\n      </div>\r\n\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Dev\\MERN-Project\\client\\src\\pages\\Login.js",["171"],"import NavBar from \"../components/layout/navBar\";\r\nimport classes from \"../components/Auth/AuthForm.module.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { LoggedContext } from '../App';\r\nimport GoogleLoginButton from \"../components/Auth/googleLoginButton\";\r\nimport AuthLayout from \"../components/layout/auth-layout/authLayout\";\r\n\r\nfunction Login() {\r\n\r\n  const navigate = useNavigate();\r\n  const {loggedStatus, checkLoggedStatus} = useContext(LoggedContext);\r\n\r\n  const [username, setUsername] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n\r\n  function login(e){\r\n    // Prevent page reload\r\n    e.preventDefault();\r\n\r\n    // Create newUser Json Object\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(process.env.REACT_APP_API + '/auth/login',user,{withCredentials: true})\r\n    .then(function (response) {\r\n      if(response.data === true){\r\n        checkLoggedStatus();\r\n        navigate(\"/feed\");\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <AuthLayout>\r\n        <div className={classes.AuthForm}>\r\n          <form>\r\n            <h1>Log In</h1>\r\n            <input type=\"text\"  onChange={(e) => setUsername(e.target.value)} placeholder=\"Username or Email\"></input>\r\n            <input type=\"password\"  onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"></input>\r\n            <button onClick={login}>Login</button>\r\n            <GoogleLoginButton method=\"Sign In\"></GoogleLoginButton>\r\n          </form>\r\n          <p>Don't have an account? <Link to=\"/register\">Register Here</Link></p>\r\n        </div>\r\n      </AuthLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Dev\\MERN-Project\\client\\src\\pages\\Profile.js",["172"],"import { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport MainContent from \"../components/layout/main-content\";\r\nimport PageContainer from \"../components/layout/page-container\";\r\nimport NavSidebar from \"../components/layout/nav-sidebar/navSidebar\";\r\nimport NavSidebarLink from \"../components/layout/nav-sidebar/navSidebarLink\";\r\nimport UserProfile from \"../components/profile/userProfile\";\r\nimport Settings from \"../components/profile/settings\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { LoggedContext } from \"../App\";\r\nimport Requests from \"../components/Requests/requests\";\r\n\r\nfunction Profile() {\r\n\r\n  const {loggedStatus, setLoggedStatus} = useContext(LoggedContext)\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    if(loggedStatus === false){\r\n      navigate(\"/login\");\r\n    }\r\n  }, [loggedStatus, navigate])\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <PageContainer>\r\n        <NavSidebar>\r\n          <NavSidebarLink to=\"./view\" linkTitle=\"Your Profile\"/>\r\n          <NavSidebarLink to=\"./settings\" linkTitle=\"Settings\"/>\r\n          <NavSidebarLink to=\"./requests\" linkTitle=\"Requests\"/>\r\n        </NavSidebar>\r\n        <MainContent>\r\n          <Routes>\r\n            <Route path=\"/view\" element={<UserProfile/>} />\r\n            <Route path=\"/settings\" element={<Settings/>} />\r\n            <Route path=\"/requests\" element={<Requests/>} />\r\n          </Routes>\r\n        </MainContent>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Dev\\MERN-Project\\client\\src\\pages\\Submit.js",[],"C:\\Dev\\MERN-Project\\client\\src\\pages\\Feed.js",["173","174","175"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport PostList from \"../components/posts/postList\";\r\nimport PageContainer from \"../components/layout/page-container\";\r\nimport MainContent from \"../components/layout/main-content\";\r\nimport NavSidebar from \"../components/layout/nav-sidebar/navSidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport plusIcon from \"../assets/icons/plusIcon.svg\";\r\nimport classes from \"./Feed.module.css\";\r\nimport NavSidebarLink from \"../components/layout/nav-sidebar/navSidebarLink\";\r\nimport { LoggedContext } from '../App';\r\n\r\nfunction Feed() {\r\n  const [technology, setTechnology] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  const { loggedStatus, checkLoggedStatus } = useContext(LoggedContext)\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(()=>{\r\n    axios.get(process.env.REACT_APP_API + \"/categories/\").then((response) => {\r\n      setCategories(response.data);\r\n    });\r\n  },[])\r\n\r\n  function updateTechnology(e){\r\n    if(e.keyCode == 13){\r\n      navigate(\"?technology=\"+technology)\r\n      setTechnology(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      \r\n      <PageContainer>\r\n        <NavSidebar>\r\n          <div className={classes.searchTechnologies}><input onKeyDown={updateTechnology} value={technology || \"\"} onChange={(e)=>setTechnology(e.target.value)} type=\"text\" placeholder=\"Search By Technology\"/></div>\r\n          <NavSidebarLink to=\"./\" linkTitle=\"Home\"/>\r\n          <div className={classes.searchCategories}>\r\n            <p className={classes.searchCategoriesTitle}>Categories</p>\r\n            { categories ? categories.map((category) => <Link key={category._id} to={\"?category=\"+category._id}>{category.name}</Link>) : null }\r\n          </div>\r\n          <NavSidebarLink to=\"?sortBy=mostlikes\" linkTitle=\"Most Likes\"/>\r\n          { loggedStatus !== false ? <>\r\n            <NavSidebarLink to=\"?likes=true\" linkTitle=\"Your Likes\"/>\r\n            <div className={classes.newPostButtonContainer}><Link className={classes.newPostButton} to=\"/submit\">New Idea <img src={plusIcon}></img></Link></div>\r\n          </> : null }\r\n        </NavSidebar>\r\n        <MainContent>\r\n          <PostList />\r\n        </MainContent>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Dev\\MERN-Project\\client\\src\\pages\\Register.js",["176"],"import { useState, useContext } from 'react'\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport classes from \"../components/Auth/AuthForm.module.css\"\r\nimport axios from 'axios';\r\nimport { LoggedContext } from '../App';\r\nimport GoogleLoginButton from '../components/Auth/googleLoginButton.js';\r\nimport AuthLayout from '../components/layout/auth-layout/authLayout';\r\n\r\nfunction Register() {\r\n\r\n  const navigate = useNavigate();\r\n  const {loggedStatus, checkLoggedStatus} = useContext(LoggedContext);\r\n\r\n  const [firstName, setFirstName] = useState(null);\r\n  const [lastName, setLastName] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(null);\r\n\r\n  function register(e){\r\n    // Prevent page reload\r\n    e.preventDefault();\r\n\r\n    // Create newUser Json Object\r\n    const newUser = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword\r\n    };\r\n\r\n    axios.post(process.env.REACT_APP_API + '/auth/register', newUser,{withCredentials: true})\r\n    .then(function (response) {\r\n      if(response.data === true){\r\n        checkLoggedStatus();\r\n        navigate(\"/feed\");\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <AuthLayout>\r\n        <div className={classes.AuthForm}>\r\n          <form>\r\n            <h1>Register</h1>\r\n            <input type=\"text\" onChange={(e) => setFirstName(e.target.value)} placeholder=\"First Name\"></input>\r\n            <input type=\"text\" onChange={(e) => setLastName(e.target.value)} placeholder=\"Last Name\"></input>\r\n            <input type=\"text\" onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\"></input>\r\n            <input type=\"text\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\"></input>\r\n            <input type=\"password\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"></input>\r\n            <input type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm Password\"></input>\r\n            <button onClick={register}>Register</button>\r\n            <GoogleLoginButton method=\"Register\"></GoogleLoginButton>\r\n          </form>\r\n          <p>Already have an account? <Link to=\"/login\">Log In Here</Link></p>\r\n        </div>\r\n      </AuthLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\PrivateRoute.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\Logout.js",["177"],"import axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useContext } from 'react'\r\nimport { LoggedContext } from '../../App';\r\n\r\nfunction Logout() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { loggedStatus, checkLoggedStatus } = useContext(LoggedContext)\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(process.env.REACT_APP_API + '/auth/logout',{withCredentials: true})\r\n        .then(function (response) {\r\n            if(response.data === true){\r\n                checkLoggedStatus();\r\n                navigate(\"/login\");\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    })\r\n\r\n    return(null)\r\n}\r\n\r\nexport default Logout;","C:\\Dev\\MERN-Project\\client\\src\\components\\Auth\\googleLoginButton.js",["178","179"],"import { Link } from 'react-router-dom';\r\nimport classes from './googleLoginButton.module.css';\r\nimport googleIcon from '../../assets/images/google-icon.png';\r\n\r\nfunction GoogleLoginButton(props) {\r\n    return(\r\n        <a href={ process.env.REACT_APP_API + \"/auth/google\"} className={classes.GoogleLoginButton}>{props.method} with Google <img src={googleIcon} /></a>\r\n    )\r\n}\r\n\r\nexport default GoogleLoginButton;","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\page-container.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBar.js",["180"],"import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoggedContext } from \"../../App\";\r\nimport classes from \"./navBar.module.css\";\r\nimport PearLogo from \"../../assets/images/pearLogoFull.svg\";\r\nimport NavBarUser from \"./navBarUser\";\r\n\r\nfunction NavBar() {\r\n\r\n  const {loggedStatus, setLoggedStatus} = useContext(LoggedContext)\r\n\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.navLeft}>\r\n        <img className={classes.logo} src={PearLogo} alt=\"logo\"/>\r\n        <div className=\"nav-links\">\r\n          <Link to=\"/\" className={classes.link}>Home</Link>\r\n          <Link to=\"/feed\" className={classes.link}>Feed</Link>\r\n        </div>\r\n      </div>\r\n      <div className={classes.navRight}>\r\n        { loggedStatus !== false ? <NavBarUser user={loggedStatus}/> : <Link to=\"/login\" style={{marginRight: \"20px\"}} className={classes.link}>Log In</Link> }\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebar.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\main-content.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\userProfile.js",["181","182","183","184"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Post from \"../posts/post/post\";\r\nimport classes from \"./profile.module.css\";\r\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\r\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\r\nimport PostIcon from \"../../assets/icons/lightbulbIcon.svg\";\r\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\r\n\r\nfunction UserProfile() {\r\n    const [firstName,setFirstName] = useState(null);\r\n    const [lastName,setLastName] = useState(null);\r\n    const [bio,setBio] = useState(null);\r\n    const [accountDate,setAccountDate] = useState(null);\r\n    const [profilePicture,setProfilePicture] = useState(null);\r\n    const [profileBacksplash,setProfileBacksplash] = useState(null);\r\n    const [posts,setPosts] = useState([]);\r\n    const [postCount,setPostCount] = useState(0);\r\n    const [likedCount,setLikedCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        axios.get(process.env.REACT_APP_API + '/users',{withCredentials: true}).then(function (response) {\r\n            if(response.data === false){\r\n                // error\r\n            }else{\r\n                const user = response.data;\r\n                console.log(response.data)\r\n                setFirstName(user.firstName);\r\n                setLastName(user.lastName);\r\n                setBio(user.bio);\r\n                setPosts(user.posts.reverse());\r\n                setAccountDate(user.accountDate);\r\n                setProfilePicture(user.profilePicture);\r\n                setProfileBacksplash(user.profileBacksplash);\r\n                setPostCount(user.postCount);\r\n                setLikedCount(user.likedCount);\r\n            }\r\n        })\r\n    },[])\r\n\r\n    function getMemberDate(timestamp){\r\n        const options = { year: \"numeric\", month: \"long\"}\r\n        const date = new Date(timestamp).toLocaleDateString(undefined, options);\r\n        return date;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className={classes.profileWrapper}>\r\n            <div className={classes.profileCoverPhoto} style={{backgroundImage: `url(${ profileBacksplash ? profileBacksplash : DefaultCover})`}}></div>\r\n            <div className={classes.profileFlex}>\r\n                <div className={classes.profileLeftBar}>\r\n                    { firstName && profilePicture === null ? <p className={classes.profileChar}>{firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { profilePicture !== null ? <div className={classes.profilePicture} style={{backgroundImage: `url(${profilePicture})`}}></div> : null }\r\n                    <div className={classes.profileName}>{firstName + \" \" + lastName}</div>\r\n                    <div className={classes.profileBio}>{bio}</div>\r\n                    <div className={classes.pofileInfo}>\r\n                        <div className={classes.profileInfoStat}><img src={PostIcon}/><span className={classes.profileStatTitle}>Ideas:</span> {postCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={HeartIcon}/><span className={classes.profileStatTitle}>Liked Ideas:</span> {likedCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={CalendarIcon}/><span className={classes.profileStatTitle}>Joined:</span> {getMemberDate(accountDate)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.profileRight}>\r\n                    <div className={classes.postsWrapper}>\r\n                        { posts.length > 0 ? posts.map((post) => (<Post key={post} postID={post} />)) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\postList.js",["185","186","187","188"],"import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Post from \"./post/post\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport classes from \"./postList.module.css\";\r\nimport axios from \"axios\";\r\nimport NoResults from \"../Misc/noResults.js\";\r\n\r\nfunction PostList() {\r\n  const [listOfPosts, setListOfPosts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n\r\n  useEffect(() => {\r\n    checkParams(searchParams);\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className={classes.postList}>\r\n      { listOfPosts.length > 0 ? listOfPosts.map((post) => (<Post key={post} postID={post} />)) : <NoResults/>}\r\n    </div>\r\n  );\r\n\r\n  function checkParams(param) {\r\n    if(param.get('sortBy')){\r\n      sortBy(param.get('sortBy'));\r\n    }else if(param.get('likes')){\r\n      getLikedPosts();\r\n    }else if(param.get('technology')){\r\n      searchTechnology(param.get('technology'));\r\n    }else if(param.get('category')){\r\n      getByCategory(param.get('category'));\r\n    }else if(param.get('postID')){\r\n      setListOfPosts([param.get('postID')]);\r\n    }else{\r\n      getDefault();\r\n    }\r\n  }\r\n\r\n  function searchTechnology(technology){\r\n    axios.post(process.env.REACT_APP_API + \"/posts/search\", { pageNum: 1, technology }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function sortBy(sortBy){\r\n    axios.post(process.env.REACT_APP_API + \"/posts/sort\", { pageNum: 1, sortBy }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getLikedPosts(){\r\n    axios.post(process.env.REACT_APP_API + \"/posts/liked\", { pageNum: 1 }, {withCredentials: true}).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getByCategory(category){\r\n    axios.post(process.env.REACT_APP_API + \"/posts/category\", { pageNum: 1, categoryID: category }, {withCredentials: true}).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n  function getDefault(){\r\n    axios.post(process.env.REACT_APP_API + \"/posts/default\", { pageNum: 1 }).then((response) => {\r\n      handleResults(response.data);\r\n    });\r\n  }\r\n\r\n\r\n  function handleResults(results){\r\n    if(results.error){\r\n      console.log(\"Error: \", results.errorMessage);\r\n    }else{\r\n      setListOfPosts(results);\r\n    }\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\nav-sidebar\\navSidebarLink.js",["189"],"import classes from \"./navSidebarLink.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Arrow from \"../../../assets/icons/right-arrow.svg\";\r\n\r\nfunction NavSidebarLink(props){\r\n    return(\r\n        <Link className={classes.link} to={props.to}><div className={classes.linkInner}>{props.linkTitle} <img src={Arrow}/></div></Link>\r\n    )\r\n}\r\n\r\nexport default NavSidebarLink;","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\auth-layout\\authLayout.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\navBarUser.js",["190"],"import classes from \"./navBarUser.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction NavBarUser(props){\r\n    const [userInfo, setUserInfo] = useState([])\r\n    const [userDropdown,setUserDropdown] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios.post(process.env.REACT_APP_API + \"/users/user\", {userID: props.user}).then((response) => {\r\n            setUserInfo(response.data);\r\n        });\r\n    }, [props.user])\r\n\r\n    function toggleUserDropdown(){\r\n        setUserDropdown(!userDropdown);\r\n    }\r\n\r\n    return(\r\n        <div onClick={toggleUserDropdown} className={classes.navBarUser}>\r\n            <div className={classes.navBarUserWrapper}>\r\n                <div className={classes.PFP}>\r\n                    { userInfo.firstName ? <p className={classes.profileChar}>{userInfo.firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { userInfo.profilePicture ? <img src={userInfo.profilePicture}/> : null }\r\n                </div>\r\n                <div className={classes.username}>\r\n                    { userInfo.firstName && userInfo.lastName ? <p className={classes.displayName}>{userInfo.firstName} {userInfo.lastName}</p> : null}\r\n                </div>\r\n            </div>\r\n            { userDropdown ? <>\r\n            <div className={classes.dropdown}>\r\n                <Link to=\"/profile/view\" className={classes.link}>Profile</Link>\r\n                <Link to=\"/profile/requests\" className={classes.link}>Requests</Link>\r\n                <Link to=\"/profile/settings\" className={classes.link}>Settings</Link>\r\n                <Link to=\"/logout\" className={classes.link}>Log Out</Link>\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBarUser","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\post.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postTech.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postMain.js",["191"],"import classes from \"./postMain.module.css\";\r\n\r\nfunction PostMain(props) {\r\n    return (\r\n        <div className={classes.postMain}>\r\n            {props.postImage ? <>\r\n                <div className={classes.postImage}><img src={props.postImage}/><div className={classes.shadow}></div></div>\r\n            </>: null}\r\n            <h1 className={classes.postTitle}>{props.postTitle}</h1>\r\n            <p className={classes.postDesc}>{props.postDesc}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostMain;","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\categoryBar.js",["192"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport classes from \"./categoryBar.module.css\";\r\nimport DownArrow from \"../../../assets/icons/down-arrow.svg\";\r\n\r\nfunction CategoryBar(props) {\r\n    const [categoryInfo, setCategoryInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.post(process.env.REACT_APP_API + \"/categories/\",{ categoryID: props.postCategory}).then((response) => {\r\n            setCategoryInfo(response.data);\r\n        });\r\n    },[props]);\r\n\r\n    return (\r\n        <div className={classes.categoryBar} style={{backgroundColor: '#'+categoryInfo.color}}>\r\n           <p className={classes.categoryName}>{categoryInfo.name}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryBar;","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postHeader.js",["193","194","195","196","197"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport classes from \"./postHeader.module.css\";\r\nimport threeDotsSVG from \"../../../assets/icons/three-dots.svg\";\r\nimport { LoggedContext } from '../../../App';\r\nimport ProfilePicture from \"../../Misc/profilePicture\";\r\n\r\nfunction PostHeader(props) {\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    const [showPostOptions, setShowPostOptions] = useState(false);\r\n    const [currentUsersPost, setCurrentUsersPost] = useState(false);\r\n\r\n    const {loggedStatus, checkLoggedStatus} = useContext(LoggedContext);\r\n\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\", hour: '2-digit', minute: '2-digit'}\r\n    const date = new Date(props.timestamp).toLocaleDateString(undefined, options);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        axios.post(process.env.REACT_APP_API + \"/users/user\", { userID: props.userID }).then((response) => {\r\n            setUserInfo(response.data);\r\n            if(loggedStatus == props.userID){ setCurrentUsersPost(true) }\r\n        });\r\n    },[props.userID]);\r\n\r\n    function toggleOptions(){\r\n        setShowPostOptions(!showPostOptions);\r\n    }\r\n\r\n    function deletePost(){\r\n        axios.post(process.env.REACT_APP_API + \"/posts/delete\", { postID: props.postID }, {withCredentials: true}).then((response) => {\r\n            if(response.data !== true){\r\n                console.log(response.data.errorMessage);\r\n            }else{\r\n                window.location.reload(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postHeader}>\r\n            { userInfo !== null ? <>\r\n            <div className={classes.postHeaderMain}>\r\n                <ProfilePicture firstName={userInfo.firstName} profilePicture={userInfo.profilePicture} />\r\n                <div className={classes.username}>\r\n                    <p className={classes.displayName}>{userInfo.firstName} {userInfo.lastName}</p>\r\n                    <p className={classes.timestamp}>{date}</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.postHeaderOptionsBtn} onClick={toggleOptions}>\r\n                <img src={threeDotsSVG}/>\r\n                { showPostOptions ? <>\r\n                    <div className={classes.overlay}></div>\r\n                    <div className={classes.postOptions}>\r\n                        <Link to={\"/user?id=\" + props.userID} className={classes.link}>User's Profile</Link>\r\n                        { currentUsersPost ? <div className={classes.noLink} onClick={deletePost}>Delete Post</div> : null }\r\n                    </div>\r\n                </>: null}\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostHeader;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\posts\\post\\postInteractions.js",["198","199","200"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport classes from \"./postInteractions.module.css\";\r\nimport heartIcon from \"../../../assets/icons/heartIcon.svg\";\r\nimport heartIconLiked from \"../../../assets/icons/heartIcon-liked.svg\";\r\nimport requestIcon from \"../../../assets/icons/requestIcon.svg\";\r\nimport commentIcon from \"../../../assets/icons/commentIcon.svg\";\r\nimport { LoggedContext } from \"../../../App\";\r\nimport { PostContext } from \"./post.js\";\r\n\r\nfunction PostInteractions(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [requestAlreadyMade, setRequestAlreadyMade] = useState(false);\r\n    const [postLiked, setPostLiked] = useState(false);\r\n    const [request, setRequest] = useState(false);\r\n    const {postUpToDate, setPostUpToDate} = useContext(PostContext);\r\n    const {loggedStatus, setLoggedStatus} = useContext(LoggedContext);\r\n\r\n    const [message, setMessege] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setPostLiked(props.postLikes.includes(loggedStatus));\r\n\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/requests/checkRequest\",{ postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setRequestAlreadyMade(true);\r\n                }\r\n            });\r\n        }\r\n    },[props.postLikes, loggedStatus]);\r\n\r\n    function toggleRequest(){\r\n        if(loggedStatus !== false){\r\n            setRequest(!request);\r\n        }else{\r\n            navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    function likePost(){\r\n        // If User is Logged in\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/posts/like\",{ userID: loggedStatus, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data === true){\r\n                    setPostUpToDate(!postUpToDate);\r\n                }else{\r\n                    console.log(response.data);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    function sendRequest(){\r\n        if(loggedStatus !== false){\r\n            Axios.post(process.env.REACT_APP_API + \"/requests/createRequest\",{ message, postID: props.postID },{withCredentials: true}).then((response) => {\r\n                if(response.data.error === false){\r\n                    // success\r\n                    setMessege(\"\");\r\n                    setRequest(false);\r\n                    setRequestAlreadyMade(true);\r\n                }else{\r\n                    // fail\r\n                    alert(response.data.message);\r\n                }\r\n            });\r\n        }else{\r\n            navigate(\"/login\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className={classes.postInteractions}>\r\n            <div className={classes.postInteractionButton} onClick={likePost}><img src={postLiked ? heartIconLiked : heartIcon} alt=\"like button\"/>{props.postLikesCount}</div>\r\n            { !requestAlreadyMade ? <>\r\n            <div className={classes.postInteractionButton} onClick={toggleRequest}><img src={requestIcon} alt=\"request button\"/></div>\r\n            </> : <>\r\n            <div className={classes.postInteractionButtonRequestSent}>Request Sent</div>\r\n            </>}\r\n\r\n            { request ? <>\r\n            <div className={classes.requestOverlay} onClick={toggleRequest}></div>\r\n            <div className={classes.requestForm}>\r\n                <p className={classes.requestFormTitle}>Want to Collaborate?</p>\r\n                <textarea onChange={(e) => setMessege(e.target.value)} value={message || \"\"} className={classes.requestFormMessage} placeholder=\"Send a message with your request (optional).\"></textarea>\r\n                <p className={classes.requestFormDisclaimer}><span className={classes.requestFormAsterisk}>*</span> Sending request will give the poster access to your contact information (Email Address).</p>\r\n                <button className={classes.requestFormButton} onClick={sendRequest}>Request to Join</button>\r\n            </div>\r\n            </> : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostInteractions;","C:\\Dev\\MERN-Project\\client\\src\\pages\\User.js",["201","202"],"import { useSearchParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport MainContent from \"../components/layout/main-content\";\r\nimport PageContainer from \"../components/layout/page-container\";\r\nimport UserProfile from \"../components/profile/userProfile\";\r\nimport PublicProfile from \"../components/profile/publicProfile\";\r\n\r\nfunction User() {\r\n    const [userID, setUserID] = useState(null);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    useEffect(() => {\r\n        if(searchParams.get(\"id\") !== null && searchParams.get(\"id\").length > 0){\r\n            setUserID(searchParams.get(\"id\"));\r\n        }\r\n    }, [searchParams]);\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <PageContainer>\r\n                <MainContent>\r\n                    { userID !== null ? <PublicProfile userID={userID}/> : null }\r\n                </MainContent>\r\n            </PageContainer>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default User;","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\settings.js",["203","204"],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FormData from 'form-data';\r\nimport axios from \"axios\";\r\nimport classes from \"./settings.module.css\";\r\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\r\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\r\n\r\nfunction Settings() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [personalSettings, setPersonalSettings] = useState(false);\r\n    const [profilePictureSettings, setProfilePictureSettings] = useState(false);\r\n\r\n    // Personal Info States\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [bio, setBio] = useState(null);\r\n\r\n    // Profile Pictures States\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n    const [profileBacksplash, setProfileBacksplash] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(process.env.REACT_APP_API + \"/users/getPersonalSettings\", { withCredentials: true }).then((response) => {\r\n            if(response.data !== false){\r\n                setFirstName(response.data.firstName);\r\n                setLastName(response.data.lastName);\r\n                setBio(response.data.bio);\r\n            }else{\r\n                console.log(\"error\");\r\n            }\r\n        });\r\n    },[])\r\n\r\n    function togglePersonalSettings(){\r\n        setPersonalSettings(!personalSettings);\r\n    }\r\n    function toggleProfilePictureSettings(){\r\n        setProfilePictureSettings(!profilePictureSettings);\r\n    }\r\n\r\n    function updatePersonalSettings(e){\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API + \"/users/updatePersonalSettings\",{ firstName, lastName, bio } , { withCredentials: true }).then((response) => {\r\n            if(response.data.result !== false){\r\n                navigate(\"/profile/view\");\r\n            }else{\r\n                console.log(response.data.errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    function updateProfilePicture(e){\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n    \r\n        // Update the formData object\r\n        formData.append(\r\n            \"profilePicture\",\r\n            profilePicture,\r\n            profilePicture.name\r\n        );\r\n\r\n        const config = {\r\n            withCredentials: true,\r\n        };\r\n        axios.post(process.env.REACT_APP_API + \"/users/updateProfilePicture\", formData, config ).then((response) => {\r\n            if(response.data.error === true){\r\n                console.log(response.data.message)\r\n            }else{\r\n                navigate(\"/profile/view\");\r\n            }\r\n        });\r\n    }\r\n    async function updateProfileBacksplash(e){\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n    \r\n        // Update the formData object\r\n        formData.append(\r\n            \"profileBacksplash\",\r\n            profileBacksplash,\r\n            profileBacksplash.name\r\n        );\r\n\r\n        const config = {\r\n            withCredentials: true,\r\n        };\r\n        axios.post(process.env.REACT_APP_API + \"/users/updateProfileBacksplash\", formData, config ).then((response) => {\r\n            if(response.data.error === true){\r\n                console.log(response.data.message)\r\n            }else{\r\n                navigate(\"/profile/view\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <h1 className={classes.settingsTitle}>Settings</h1>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={togglePersonalSettings}>Personal Info <img src={ personalSettings ? DownArrow : RightArrow}/></div>\r\n                    <form className={classes.settingsForm} style={{display: personalSettings ? \"block\": \"none\"}}>\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} value={firstName || \"\"}/>\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} value={lastName || \"\"}/>\r\n                        <label>Bio</label>\r\n                        <textarea placeholder=\"Bio\" onChange={(e) => setBio(e.target.value)} value={bio || \"\"}></textarea>\r\n                        <button onClick={updatePersonalSettings}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={toggleProfilePictureSettings}>Profile Picture and Backsplash <img src={ profilePictureSettings ? DownArrow : RightArrow}/></div>\r\n                    <div className={classes.profileUploadsWrapper} style={{display: profilePictureSettings ? \"block\" : \"none\"}}>\r\n                        <div className={classes.fileUploadForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Picture</h1>\r\n                            <input type=\"file\" onChange={(e) => {setProfilePicture(e.target.files[0])}} />\r\n                            <button onClick={updateProfilePicture}>Update</button>\r\n                        </div>\r\n                        <form className={classes.fileUploadForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Backsplash</h1>\r\n                            <input type=\"file\" onChange={(e)=> {setProfileBacksplash(e.target.files[0])}} />\r\n                            <button onClick={updateProfileBacksplash}>Update</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Dev\\MERN-Project\\client\\src\\components\\profile\\publicProfile.js",["205","206","207"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Post from \"../posts/post/post\";\r\nimport classes from \"./profile.module.css\";\r\nimport DefaultCover from \"../../assets/images/defaultCover.png\";\r\nimport HeartIcon from \"../../assets/icons/heartIcon-liked.svg\";\r\nimport PostIcon from \"../../assets/icons/lightbulbIcon.svg\";\r\nimport CalendarIcon from \"../../assets/icons/calendarIcon.svg\";\r\n\r\nfunction PublicProfile(props) {\r\n    const [firstName,setFirstName] = useState(null);\r\n    const [lastName,setLastName] = useState(null);\r\n    const [bio,setBio] = useState(null);\r\n    const [accountDate,setAccountDate] = useState(null);\r\n    const [profilePicture,setProfilePicture] = useState(null);\r\n    const [profileBacksplash,setProfileBacksplash] = useState(null);\r\n    const [posts,setPosts] = useState([]);\r\n    const [postCount,setPostCount] = useState(0);\r\n    const [likedCount,setLikedCount] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(props.userID != null){\r\n            axios.post(process.env.REACT_APP_API + '/users/public',{ userID: props.userID }).then(function (response) {\r\n                if(response.data === false){\r\n                    console.log(\"error\");\r\n                }else{\r\n                    const user = response.data;\r\n                    setFirstName(user.firstName);\r\n                    setLastName(user.lastName);\r\n                    setBio(user.bio);\r\n                    setPosts(user.posts.reverse());\r\n                    setAccountDate(user.accountDate);\r\n                    setProfilePicture(user.profilePicture);\r\n                    setProfileBacksplash(user.profileBacksplash);\r\n                    setPostCount(user.postCount);\r\n                    setLikedCount(user.likedCount);\r\n                }\r\n            });\r\n        }\r\n    },[props.userID])\r\n\r\n    function getMemberDate(timestamp){\r\n        const options = { year: \"numeric\", month: \"long\"}\r\n        const date = new Date(timestamp).toLocaleDateString(undefined, options);\r\n        return date;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className={classes.profileWrapper}>\r\n            <div className={classes.profileCoverPhoto} style={{backgroundImage: `url(${ profileBacksplash ? profileBacksplash : DefaultCover})`}}></div>\r\n            <div className={classes.profileFlex}>\r\n                <div className={classes.profileLeftBar}>\r\n                    { firstName && profilePicture === null ? <p className={classes.profileChar}>{firstName.charAt(0).toUpperCase()}</p> : null }\r\n                    { profilePicture !== null ? <div className={classes.profilePicture} style={{backgroundImage: `url(${profilePicture})`}}></div> : null }\r\n                    <div className={classes.profileName}>{firstName + \" \" + lastName}</div>\r\n                    <div className={classes.profileBio}>{bio}</div>\r\n                    <div className={classes.pofileInfo}>\r\n                        <div className={classes.profileInfoStat}><img src={PostIcon}/><span className={classes.profileStatTitle}>Posts: </span>{postCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={HeartIcon}/><span className={classes.profileStatTitle}>Liked Posts: </span>{likedCount}</div>\r\n                        <div className={classes.profileInfoStat}><img src={CalendarIcon}/><span className={classes.profileStatTitle}>Joined: </span>{getMemberDate(accountDate)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.profileRight}>\r\n                    <div className={classes.postsWrapper}>\r\n                        { posts.length > 0 ? posts.map((post) => (<Post key={post} postID={post} />)) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicProfile;","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\noResults.js",["208"],"import classes from \"./noResults.module.css\";\r\nimport NoResultsImg from \"../../assets/icons/noResults.svg\";\r\n\r\nfunction NoResults(){\r\n    return(\r\n        <div className={classes.noResultsContainer}><img src={NoResultsImg}/></div>\r\n    );\r\n}\r\n\r\nexport default NoResults;","C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\requests.js",[],"C:\\Dev\\MERN-Project\\client\\src\\components\\Requests\\request.js",["209","210"],"import classes from \"./request.module.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ProfilePicture from \"../Misc/profilePicture\";\r\n\r\nfunction Request(props) {\r\n  console.log(props.requestData)\r\n    const request = props.requestData;\r\n\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\", hour: '2-digit', minute: '2-digit'}\r\n    const date = new Date(request.requestTimestamp).toLocaleDateString(undefined, options);\r\n\r\n    let border = \"transparent\";\r\n    let status = \"Pending\"\r\n    if(request.status === \"accepted\"){\r\n      border = \"#499e44\";\r\n      status = \"Email: \"+request.fromUserEmail;\r\n    }else if(request.status == \"declined\"){\r\n      border = \"#b03a3a\";\r\n      status = \"Declined\";\r\n    }\r\n\r\n    function answerRequest(answer){\r\n      if(window.confirm(\"Are you sure you to \"+answer+\" this request?\") === true){\r\n        axios.post(process.env.REACT_APP_API + \"/requests/answer\", { requestID: request.requestID, answer }, {withCredentials: true}).then((response) => {\r\n          console.log(response.data)\r\n            if(response.data.error === true){\r\n                console.log(response.data.message);\r\n            }else{\r\n                window.location.reload(false);\r\n            }\r\n        });\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div className={classes.request} style={{border: \"2px solid \"+border}}>\r\n        <div className={classes.requestHeader}>\r\n          <ProfilePicture firstName={request.firstName} profilePicture={request.profilePicture}/>\r\n          <div style={{paddingLeft: \"10px\"}}>\r\n            <h1 className={classes.requestTitle}><Link to={\"/user?id=\" + request.fromUser}>{request.firstName} {request.lastName} </Link> would like to join <Link to={\"/feed?postID=\"+request.postID}>{request.postTitle}</Link></h1>\r\n            <p className={classes.requestDate}>{date}</p>\r\n          </div>\r\n        </div>\r\n        { request.message ? <div className={classes.requestMessage}>{request.message}</div> : null }\r\n        <div className={classes.requestInteractions}>\r\n          { request.status === \"pending\" ? <>\r\n          <div onClick={() => {answerRequest(\"accept\")}} className={classes.requestAcceptBtn}>Accept</div>\r\n          <div onClick={() => {answerRequest(\"decline\")}} className={classes.requestDeclineBtn}>Decline</div>\r\n          </> : status }\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Request;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\Misc\\profilePicture.js",["211"],"import classes from \"./profilePicture.module.css\";\r\n\r\nfunction ProfilePicture(props) {\r\n\r\n  return (\r\n    <div className={classes.PFP}>\r\n        <p className={classes.profileChar}>{props.firstName.charAt(0).toUpperCase()}</p>\r\n        { props.profilePicture !== null ? <img src={props.profilePicture}/> : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePicture;","C:\\Dev\\MERN-Project\\client\\src\\pages\\About.js",["212","213","214"],"import classes from \"./About.module.css\";\r\nimport FadeIn from \"react-fade-in/lib/FadeIn\";\r\nimport MeImg from \"../assets/images/me.jpg\";\r\nimport NavBar from \"../components/layout/navBar\";\r\nimport Footer from \"../components/layout/footer\";\r\n\r\nfunction About(){\r\n    return(\r\n        <>\r\n            <NavBar />\r\n            <div className={classes.idea}>\r\n                <img className={classes.meImg} src={MeImg}/>\r\n                <h1 className={classes.ideaTitle}>Me and My Idea</h1>\r\n                <p className={classes.ideaDesc}>My name is <a onClick={() => { window.location.href = 'https://maxbraun.us'}}>Max Braun</a>. I'm a senior in college majoring in Computer Science, with an interest in web development.</p>\r\n                <p className={classes.ideaDesc}>With graduation around the corner, I began searching for real world jobs in my feild of interest. As I searched, I learned a lot about resumes and how valuable having a solid set of personal projects on your resume can be when job searching. I also learned that many companies greatly value soft skills such as teamwork and communication when hiring developers. As great as my college education has been thusfar, I realized I haven't had a considerable amount of experience working with other developers, and I surely didn't have a sizeable set of quality projects to show employers.</p>\r\n                <p className={classes.ideaDesc}>So, I began hunting for project ideas. I searched on Google, only to find long lists of repetitive, generic projects that had been done a million times. I searched Reddit, and found some original ideas, but none that interested me, or were working with the same technologies I was interested in. I even asked some of my college peers what they were working on, but many of them didn't have any side projects and the ones that did were irrelivent to my area of interest.</p>\r\n\r\n                <p className={classes.ideaDesc}>After a month or so of messing around with my resume and waiting for a project idea to strike me, I finally put two and two together. I'm interested in website development, I need a project, and junior developers need a place to find project ideas and stregthen their resume/teamwork skills. Why don't I just try to create a platform for junior developers to share project ideas and work together on them?</p>\r\n                \r\n                <p className={classes.ideaDesc}>And so I started working on Pear Programming with any time I could find between my actual job, college classes, and everything else. I plan on continuing to improve and add features to this project in any spare time I have.</p>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n        \r\n    ) \r\n}\r\n\r\nexport default About;\r\n","C:\\Dev\\MERN-Project\\client\\src\\components\\layout\\footer.js",[],{"ruleId":"215","severity":1,"message":"216","line":25,"column":6,"nodeType":"217","endLine":25,"endColumn":8,"suggestions":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":21,"column":12,"nodeType":"225","messageId":"226","endLine":21,"endColumn":23},{"ruleId":"223","severity":1,"message":"227","line":13,"column":10,"nodeType":"225","messageId":"226","endLine":13,"endColumn":22},{"ruleId":"223","severity":1,"message":"228","line":15,"column":24,"nodeType":"225","messageId":"226","endLine":15,"endColumn":39},{"ruleId":"223","severity":1,"message":"229","line":19,"column":25,"nodeType":"225","messageId":"226","endLine":19,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":30,"column":18,"nodeType":"232","messageId":"233","endLine":30,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":51,"column":123,"nodeType":"236","endLine":51,"endColumn":143},{"ruleId":"223","severity":1,"message":"227","line":13,"column":10,"nodeType":"225","messageId":"226","endLine":13,"endColumn":22},{"ruleId":"223","severity":1,"message":"227","line":10,"column":13,"nodeType":"225","messageId":"226","endLine":10,"endColumn":25},{"ruleId":"223","severity":1,"message":"237","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":7,"column":128,"nodeType":"236","endLine":7,"endColumn":152},{"ruleId":"223","severity":1,"message":"228","line":10,"column":24,"nodeType":"225","messageId":"226","endLine":10,"endColumn":39},{"ruleId":"223","severity":1,"message":"237","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":59,"column":66,"nodeType":"236","endLine":59,"endColumn":87},{"ruleId":"234","severity":1,"message":"235","line":60,"column":66,"nodeType":"236","endLine":60,"endColumn":88},{"ruleId":"234","severity":1,"message":"235","line":61,"column":66,"nodeType":"236","endLine":61,"endColumn":91},{"ruleId":"223","severity":1,"message":"238","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"239","line":11,"column":9,"nodeType":"225","messageId":"226","endLine":11,"endColumn":17},{"ruleId":"223","severity":1,"message":"240","line":13,"column":24,"nodeType":"225","messageId":"226","endLine":13,"endColumn":39},{"ruleId":"215","severity":1,"message":"241","line":18,"column":6,"nodeType":"217","endLine":18,"endColumn":20,"suggestions":"242"},{"ruleId":"234","severity":1,"message":"235","line":7,"column":107,"nodeType":"236","endLine":7,"endColumn":125},{"ruleId":"234","severity":1,"message":"235","line":25,"column":49,"nodeType":"236","endLine":25,"endColumn":85},{"ruleId":"234","severity":1,"message":"235","line":7,"column":52,"nodeType":"236","endLine":7,"endColumn":80},{"ruleId":"223","severity":1,"message":"243","line":4,"column":8,"nodeType":"225","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"223","severity":1,"message":"229","line":14,"column":26,"nodeType":"225","messageId":"226","endLine":14,"endColumn":43},{"ruleId":"223","severity":1,"message":"239","line":19,"column":11,"nodeType":"225","messageId":"226","endLine":19,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":24,"column":29,"nodeType":"232","messageId":"233","endLine":24,"endColumn":31},{"ruleId":"215","severity":1,"message":"244","line":26,"column":7,"nodeType":"217","endLine":26,"endColumn":21,"suggestions":"245"},{"ruleId":"234","severity":1,"message":"235","line":53,"column":17,"nodeType":"236","endLine":53,"endColumn":42},{"ruleId":"223","severity":1,"message":"246","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":19},{"ruleId":"223","severity":1,"message":"228","line":20,"column":26,"nodeType":"225","messageId":"226","endLine":20,"endColumn":41},{"ruleId":"215","severity":1,"message":"247","line":34,"column":7,"nodeType":"217","endLine":34,"endColumn":38,"suggestions":"248"},{"ruleId":"223","severity":1,"message":"249","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":19},{"ruleId":"223","severity":1,"message":"240","line":11,"column":26,"nodeType":"225","messageId":"226","endLine":11,"endColumn":41},{"ruleId":"234","severity":1,"message":"235","line":108,"column":114,"nodeType":"236","endLine":108,"endColumn":169},{"ruleId":"234","severity":1,"message":"235","line":123,"column":137,"nodeType":"236","endLine":123,"endColumn":198},{"ruleId":"234","severity":1,"message":"235","line":59,"column":66,"nodeType":"236","endLine":59,"endColumn":87},{"ruleId":"234","severity":1,"message":"235","line":60,"column":66,"nodeType":"236","endLine":60,"endColumn":88},{"ruleId":"234","severity":1,"message":"235","line":61,"column":66,"nodeType":"236","endLine":61,"endColumn":91},{"ruleId":"234","severity":1,"message":"235","line":6,"column":53,"nodeType":"236","endLine":6,"endColumn":78},{"ruleId":"223","severity":1,"message":"250","line":2,"column":16,"nodeType":"225","messageId":"226","endLine":2,"endColumn":27},{"ruleId":"230","severity":1,"message":"231","line":18,"column":29,"nodeType":"232","messageId":"233","endLine":18,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":8,"column":43,"nodeType":"236","endLine":8,"endColumn":76},{"ruleId":"223","severity":1,"message":"251","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":12,"column":17,"nodeType":"236","endLine":12,"endColumn":61},{"ruleId":"252","severity":1,"message":"253","line":14,"column":60,"nodeType":"236","endLine":14,"endColumn":127},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkLoggedStatus'. Either include it or remove the dependency array.","ArrayExpression",["254"],"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'toMyWebsite' is defined but never used.","Identifier","unusedVar","'loggedStatus' is assigned a value but never used.","'setLoggedStatus' is assigned a value but never used.","'checkLoggedStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Axios' is defined but never used.","'navigate' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkParams'. Either include it or remove the dependency array.",["257"],"'DownArrow' is defined but never used.","React Hook useEffect has a missing dependency: 'loggedStatus'. Either include it or remove the dependency array.",["258"],"'commentIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.postID'. Either include it or remove the dependency array.",["259"],"'UserProfile' is defined but never used.","'useNavigate' is defined but never used.","'FadeIn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"260","fix":"261"},"no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [checkLoggedStatus]",{"range":"268","text":"269"},"Update the dependencies array to be: [checkParams, searchParams]",{"range":"270","text":"271"},"Update the dependencies array to be: [loggedStatus, props.userID]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.postLikes, loggedStatus, props.postID]",{"range":"274","text":"275"},[788,790],"[checkLoggedStatus]",[535,549],"[checkParams, searchParams]",[1165,1179],"[loggedStatus, props.userID]",[1424,1455],"[props.postLikes, loggedStatus, props.postID]"]