{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\MERN-Project\\\\client\\\\src\\\\components\\\\profile\\\\settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport classes from \"./settings.module.css\";\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Settings() {\n  _s();\n\n  const navigate = useNavigate();\n  const [personalSettings, setPersonalSettings] = useState(false);\n  const [profilePictureSettings, setProfilePictureSettings] = useState(true); // Personal Info States\n\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [bio, setBio] = useState(null); // Profile Pictures States\n\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [profileBacksplash, setProfileBacksplash] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/users/getPersonalSettings\", {\n      withCredentials: true\n    }).then(response => {\n      if (response.data !== false) {\n        setFirstName(response.data.firstName);\n        setLastName(response.data.lastName);\n        setBio(response.data.bio);\n      } else {\n        console.log(\"error\");\n      }\n    });\n  }, []);\n\n  function togglePersonalSettings() {\n    setPersonalSettings(!personalSettings);\n  }\n\n  function toggleProfilePictureSettings() {\n    setProfilePictureSettings(!profilePictureSettings);\n  }\n\n  function updatePersonalSettings(e) {\n    e.preventDefault();\n    axios.post(\"http://localhost:3001/users/updatePersonalSettings\", {\n      firstName,\n      lastName,\n      bio\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.result !== false) {\n        navigate(\"/profile/view\");\n      } else {\n        console.log(response.data.errors);\n      }\n    });\n  }\n\n  function updateProfilePicture(e) {\n    e.preventDefault();\n    console.log(profilePicture);\n  }\n\n  function updateProfileBacksplash(e) {\n    console.log(profileBacksplash);\n    e.preventDefault();\n\n    if (profileBacksplash) {\n      const formData = new FormData();\n      formData.append('profileBacksplash', profileBacksplash, profileBacksplash.name);\n      const config = {\n        withCredentials: true,\n        headers: {\n          'enctype': \"multipart/form-data\"\n        }\n      };\n      console.log(formData);\n      axios.post(\"http://localhost:3001/users/updateProfileBacksplash\", {\n        formData\n      }, config).then(response => {\n        console.log(response.data);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.settings,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.settingsTitle,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.settingsSectionWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.settingsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.settinsSectionHeader,\n          onClick: togglePersonalSettings,\n          children: [\"Personal Info \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: personalSettings ? DownArrow : RightArrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 114\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.settingsForm,\n          style: {\n            display: personalSettings ? \"block\" : \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            onChange: e => setFirstName(e.target.value),\n            value: firstName || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Last Name\",\n            onChange: e => setLastName(e.target.value),\n            value: lastName || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Bio\",\n            onChange: e => setBio(e.target.value),\n            value: bio || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updatePersonalSettings,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.settingsSectionWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.settingsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.settinsSectionHeader,\n          onClick: toggleProfilePictureSettings,\n          children: [\"Profile Picture and Backsplash \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePictureSettings ? DownArrow : RightArrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 137\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profileUploadsWrapper,\n          style: {\n            display: profilePictureSettings ? \"block\" : \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profilePictureForm,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.profilePictureHeader,\n              children: \"Update Profile Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => {\n                setProfilePicture(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateProfilePicture,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profileBacksplashForm,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.profilePictureHeader,\n              children: \"Update Profile Backsplash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => {\n                setProfileBacksplash(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateProfileBacksplash,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Settings, \"B1clacGsaNwAm9bBGCoiHxYMM2Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Dev/MERN-Project/client/src/components/profile/settings.js"],"names":["useState","useEffect","useNavigate","axios","classes","RightArrow","DownArrow","Settings","navigate","personalSettings","setPersonalSettings","profilePictureSettings","setProfilePictureSettings","firstName","setFirstName","lastName","setLastName","bio","setBio","profilePicture","setProfilePicture","profileBacksplash","setProfileBacksplash","get","withCredentials","then","response","data","console","log","togglePersonalSettings","toggleProfilePictureSettings","updatePersonalSettings","e","preventDefault","post","result","errors","updateProfilePicture","updateProfileBacksplash","formData","FormData","append","name","config","headers","settings","settingsTitle","settingsSectionWrapper","settingsSection","settinsSectionHeader","settingsForm","display","target","value","profileUploadsWrapper","profilePictureForm","profilePictureHeader","files","profileBacksplashForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport classes from \"./settings.module.css\";\r\nimport RightArrow from \"../../assets/icons/right-arrow-black.svg\";\r\nimport DownArrow from \"../../assets/icons/down-arrow-black.svg\";\r\n\r\nfunction Settings() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [personalSettings, setPersonalSettings] = useState(false);\r\n    const [profilePictureSettings, setProfilePictureSettings] = useState(true);\r\n\r\n    // Personal Info States\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [bio, setBio] = useState(null);\r\n\r\n    // Profile Pictures States\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n    const [profileBacksplash, setProfileBacksplash] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:3001/users/getPersonalSettings\", { withCredentials: true }).then((response) => {\r\n            if(response.data !== false){\r\n                setFirstName(response.data.firstName);\r\n                setLastName(response.data.lastName);\r\n                setBio(response.data.bio);\r\n            }else{\r\n                console.log(\"error\");\r\n            }\r\n        });\r\n    },[])\r\n\r\n    function togglePersonalSettings(){\r\n        setPersonalSettings(!personalSettings);\r\n    }\r\n    function toggleProfilePictureSettings(){\r\n        setProfilePictureSettings(!profilePictureSettings);\r\n    }\r\n\r\n    function updatePersonalSettings(e){\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:3001/users/updatePersonalSettings\",{ firstName, lastName, bio } , { withCredentials: true }).then((response) => {\r\n            if(response.data.result !== false){\r\n                navigate(\"/profile/view\");\r\n            }else{\r\n                console.log(response.data.errors);\r\n            }\r\n        });\r\n    }\r\n\r\n    function updateProfilePicture(e){\r\n        e.preventDefault();\r\n        console.log(profilePicture)\r\n    }\r\n    function updateProfileBacksplash(e){\r\n        console.log(profileBacksplash)\r\n        e.preventDefault();\r\n        if(profileBacksplash){\r\n            const formData = new FormData();\r\n            formData.append('profileBacksplash',profileBacksplash,profileBacksplash.name);\r\n            const config = {\r\n                withCredentials: true,\r\n                headers: {\r\n                    'enctype' : \"multipart/form-data\"\r\n                }\r\n            };\r\n            console.log(formData)\r\n            axios.post(\"http://localhost:3001/users/updateProfileBacksplash\",{ formData } , config).then((response) => {\r\n                console.log(response.data)\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <h1 className={classes.settingsTitle}>Settings</h1>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={togglePersonalSettings}>Personal Info <img src={ personalSettings ? DownArrow : RightArrow}/></div>\r\n                    <form className={classes.settingsForm} style={{display: personalSettings ? \"block\": \"none\"}}>\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} value={firstName || \"\"}/>\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} value={lastName || \"\"}/>\r\n                        <label>Bio</label>\r\n                        <textarea placeholder=\"Bio\" onChange={(e) => setBio(e.target.value)} value={bio || \"\"}></textarea>\r\n                        <button onClick={updatePersonalSettings}>Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.settingsSectionWrapper}>\r\n                <div className={classes.settingsSection}>\r\n                    <div className={classes.settinsSectionHeader} onClick={toggleProfilePictureSettings}>Profile Picture and Backsplash <img src={ profilePictureSettings ? DownArrow : RightArrow}/></div>\r\n                    <div className={classes.profileUploadsWrapper} style={{display: profilePictureSettings ? \"block\" : \"none\"}}>\r\n                        <div className={classes.profilePictureForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Picture</h1>\r\n                            <input type=\"file\" onChange={(e) => {setProfilePicture(e.target.files[0])}} />\r\n                            <button onClick={updateProfilePicture}>Update</button>\r\n                        </div>\r\n                        <div className={classes.profileBacksplashForm}>\r\n                            <h1 className={classes.profilePictureHeader}>Update Profile Backsplash</h1>\r\n                            <input type=\"file\" onChange={(e) => {setProfileBacksplash(e.target.files[0])}} />\r\n                            <button onClick={updateProfileBacksplash}>Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}